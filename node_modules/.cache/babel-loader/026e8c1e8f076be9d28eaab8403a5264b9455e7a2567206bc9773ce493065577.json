{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport MyModal from '@/components/MyModal.vue';\nimport { BButton } from \"bootstrap-vue\";\nimport KnobControl from 'vue-knob-control';\nexport default {\n  props: {\n    compTableItens: [],\n    idOperacao: {\n      required: true\n    },\n    usuMatricula: {\n      required: true\n    }\n  },\n  name: 'AppEquipamentosGrid',\n  components: {\n    MyModal,\n    BButton,\n    KnobControl\n  },\n  watch: {\n    usuMatricula(newValue) {\n      console.log(\"MATRICULA !! >>> \" + this.usuMatriculaLocal);\n      this.usuMatriculaLocal = newValue;\n    }\n  },\n  computed: {\n    // CONSTANTE\n    IS_PAGE_EDITABLE() {\n      return this.$store.state.isPageEditable;\n    }\n  },\n  /* Realiza montagem do componente caso seja leitura/Busca Histórico, com base no properties passado*/\n  created() {\n    // alert( \"E = \" + JSON.stringify( this.equipamentosBD ) );   \n    console.log(\"Create Table where?? >> \" + this.$route.name);\n    if (this.$route.name == \"addOperacoes\") {\n      this.isAddOperacoesPage = true;\n    } else {\n      this.isAddOperacoesPage = false;\n      this.cadastrarBtnName = \"Atualizar Agente/Equipamento\";\n    }\n    this.$store.commit('setIsPageEditable', this.isAddOperacoesPage);\n    var str = this.$store.state.isPageEditable;\n    console.log(\"AppEquipamentosGRID | isPageEditable ? \" + str);\n    console.log(\"-AppEquipGrid || isAddOperacoes? \" + this.isAddOperacoesPage);\n\n    /* Monta o componente de acordo com os dados recebidos do BD, na propriedade atualizada no watch\r\n       this.compTableItens */\n    console.log(\"CAMPOS >>\" + JSON.stringify(this.compTableItens));\n\n    // var tam = this.compTableItens.length;\n    if (this.compTableItens != null) {\n      // console.log( \"CREATED APP-GRID ||| IS_PAGE_EDITABLE ? = \" + this.IS_PAGE_EDITABLE );\n\n      for (var i = 0; i < this.compTableItens.length; i++) {\n        //console.log(\"Tipo =>> \" + this.compTableItens[i].tipoEquipamento );\n\n        if (this.compTableItens[i].tipoEquipamento == \"RADIO_HT\") {\n          this.equipSelecionado = \"Rádio HT\";\n        } else if (this.compTableItens[i].tipoEquipamento == \"VIATURA\") {\n          this.equipSelecionado = \"Viatura\";\n          // this.kmInicial = parseFloat( this.compTableItens[i].kmIni );\n        } else if (this.compTableItens[i].tipoEquipamento == \"COLETE\") {\n          this.equipSelecionado = \"Colete\";\n        }\n        // console.log( \"SELECTED !!!!! \" + this.equipSelecionado );\n\n        const equipamento = {\n          id: this.equipamentos.length + 1,\n          url: this.getImageUrl(),\n          imageSize: this.getImageSize(),\n          tipo: this.equipSelecionado,\n          idDataLabel: this.equipSelecionado,\n          idData: this.compTableItens[i].idEquipamento,\n          matriculaAgente: this.compTableItens[i].matriculaAgente,\n          kmIni: this.compTableItens[i].kmIni,\n          kmFim: this.compTableItens[i].kmFim\n        };\n        this.equipamentos.push(equipamento);\n      }\n    }\n  },\n  data() {\n    return {\n      /***** CONSTANTES *****/\n      LIMITE_EQUIPAMENTOS: 6,\n      /***** Modal de seleção *****/\n      mVisible: false,\n      equipSelecionado: null,\n      /* Tipo de Equipamento selecionado no modal */\n      equipOpcoes: ['Talonário', 'Rádio HT', 'Viatura', 'Colete', 'Etilômetro', 'Todos'],\n      equipId: [],\n      /***** Modal de seleção *****/\n\n      inputEquipIDAtivos: [],\n      /* lista de dados ativos */\n      cadastrarBtnName: \"Cadastrar Agente\",\n      equipamentos: [],\n      equipamentosBD: [],\n      /* Dados retornados da tabela de Equipamento */\n      equipamentosIDsBD: [],\n      /* Conterá lista de placas, N° séries, ou IDs carregados do BD... */\n\n      coletesBD: [],\n      radiosBD: [],\n      viaturasBD: [],\n      kmInicial: 0.0,\n      /* Define a Km inicial, p/ o atual componente inserido (Caso seja Viatura) */\n      kmFinal: 0.0,\n      usuMatriculaLocal: null,\n      isAddOperacoesPage: -1,\n      /** Verifica se esta página atual é a de adicionar Operações */\n\n      /***** Dados de controle *****/\n      hasSavedOnDatabase: false,\n      isTableValidationOk: false,\n      modalIsVisible: false,\n      modalMessage: \"Deseja confirmar a operação?\",\n      vet: [],\n      kmEstimado: '0.0',\n      bairroOperacao: null,\n      bairros: [{\n        value: 1,\n        text: 'Miramar'\n      }, {\n        value: 2,\n        text: 'Bessa'\n      }, {\n        value: 2,\n        text: 'Manaira'\n      }],\n      agenteResponsavel: null,\n      agentes: [{\n        value: 1,\n        text: 'Agente 1'\n      }, {\n        value: 2,\n        text: 'Agente 2'\n      }, {\n        value: 2,\n        text: 'Agente 3'\n      }, {\n        value: 2,\n        text: 'Agente 4'\n      }, {\n        value: 2,\n        text: 'Agente 5'\n      }, {\n        value: 2,\n        text: 'Agente 6'\n      }, {\n        value: 2,\n        text: 'Agente 7'\n      }, {\n        value: 2,\n        text: 'Agente 8'\n      }]\n    };\n  },\n  methods: {\n    isComponentDisabled() {\n      /**** Caso (não editavel/pág. sem ser Add) OU (salvo no BD)... desabilitar ****/\n      var isComponentDisabled = !this.IS_PAGE_EDITABLE || this.hasSavedOnDatabase;\n      // console.log( \"isComponentDisabled ? \" + isComponentDisabled );\n      return isComponentDisabled;\n    },\n    velocimentoIniLabel(kmInicial) {\n      console.log(\"Valor real = \" + kmInicial);\n      return kmInicial * 100 + \"\";\n    },\n    velocimentoFimLabel(kmFinal) {\n      console.log(\"Valor real = \" + kmFinal);\n      return kmFinal * 100 + \"\";\n    },\n    handleCloseModal() {\n      // console.log(\"Close ... \");\n      this.modalIsVisible = false;\n      this.modalMessage = \"x\";\n    },\n    handleAcceptModal() {\n      // console.log(\"Accept ... \");\n      this.modalIsVisible = false;\n      this.modalMessage = \"y\";\n    },\n    handleRejectModal() {\n      // console.log(\"Reject ... \");\n      this.modalIsVisible = false;\n      this.modalMessage = \"d\";\n    },\n    showModal() {\n      this.mVisible = true;\n    },\n    onModalClose() {\n      console.log('Selected Option:', this.equipSelecionado);\n      if (this.equipSelecionado == \"Todos\") {\n        for (var i = 0; i < 4; i++) {\n          console.log(\"i = \" + i + \"] \" + this.equipOpcoes[i]);\n          this.equipSelecionado = this.equipOpcoes[i];\n          this.addEquipComponent();\n        }\n      } else {\n        if (this.equipSelecionado != null) this.addEquipComponent();\n      }\n    },\n    sendStatusToParent() {\n      console.log(\"Sending data to parent....\");\n      this.$emit('data-updated', this.hasSavedOnDatabase);\n    },\n    getImageUrl() {\n      // Logic to determine the image URL based on equipSelecionado\n      if (this.equipSelecionado === 'Viatura') {\n        return require('@/assets/viatura.png');\n      } else if (this.equipSelecionado === 'Talonário') {\n        return require('@/assets/talonario.png');\n      } else if (this.equipSelecionado === 'Rádio HT') {\n        return require('@/assets/radio.jpg');\n      } else if (this.equipSelecionado === 'Etilômetro') {\n        return require('@/assets/etilometro.png');\n      } else if (this.equipSelecionado === 'Colete') {\n        return require('@/assets/colete_new.jpg');\n      }\n    },\n    getImageSize() {\n      if (this.equipSelecionado === 'Viatura' || this.equipSelecionado === 'Talonário') return '30%';else if (this.equipSelecionado === 'Rádio HT') return '60%';else if (this.equipSelecionado === 'Etilômetro') return '50%';else if (this.equipSelecionado === 'Colete') return '30%';\n    },\n    removeEquipComponent(id) {\n      this.equipamentos = this.equipamentos.filter(image => image.id !== id);\n    },\n    addEquipComponent() {\n      // console.log( \"LISTA EQUIPS =>> \" + JSON.stringify( this.LISTA_EQUIPAMENTOS_SELECIONADOS ) );\n      console.log(\"-->> kmInicial = \" + this.kmInicial);\n      if (this.equipamentos.length >= this.LIMITE_EQUIPAMENTOS) {\n        this.modalMessage = \"Limite de equipamentos atingido.\";\n        this.modalIsVisible = true;\n        return;\n      }\n      this.getEquipamentosBD(this.equipSelecionado);\n      if (this.equipSelecionado == 'Viatura') {\n        const hasViatura = this.equipamentos.some(equip => equip.tipo === 'Viatura');\n        if (hasViatura) {\n          this.modalMessage = \"Viatura já inserida para este agente.\";\n          this.modalIsVisible = true;\n          return;\n        }\n      }\n      const equipamento = {\n        id: this.equipamentos.length + 1,\n        url: this.getImageUrl(),\n        imageSize: this.getImageSize(),\n        tipo: this.equipSelecionado,\n        idDataLabel: this.equipSelecionado === 'Viatura' ? \"Placa\" : this.equipSelecionado === 'Rádio HT' || this.equipSelecionado === 'COLETE' ? 'Id.' : 'N° de Série',\n        idData: '',\n        //this.equipSelecionado === 'Viatura' ? \"Placa\" : ( this.equipSelecionado === 'Rádio HT' || this.equipSelecionado === 'COLETE' ? 'Id.' : 'N° de Série' ),\n        kmIni: null,\n        kmFim: null\n      };\n      this.equipamentos.push(equipamento);\n    },\n    validaEquipamentoID(equipamentoObj) {\n      /* console.log( \"valida\" + JSON.stringify( equipamentoObj ));\r\n         console.log(\"--idData ==>>> \" + equipamentoObj.idData );\r\n         console.log(\"--Viaturas ==>>> \" + JSON.stringify( this.viaturasBD ));*/\n\n      /*var vet = this.getDatalistOptions( equipamentoObj.tipo );\r\n      console.log( \"->> Valida lista equips === \" + JSON.stringify( vet ) );*/\n\n      // A lista do objeto atual, contem o ID selecionado ?!?\n      var isValid = this.getDatalistOptions(equipamentoObj.tipo).includes(equipamentoObj.idData);\n      var msg = \"\";\n      if (equipamentoObj.tipo == \"Viatura\") msg = \"Placa inválida\";else if (equipamentoObj.tipo == \"Colete\") msg = \"N° de série inválido\";else if (equipamentoObj.tipo == \"Rádio HT\") msg = \"Identificador inválido\";\n      if (!isValid) {\n        this.modalIsVisible = true;\n        this.modalMessage = msg;\n      } else {\n        this.inputEquipIDAtivos.push(equipamentoObj.idData);\n      }\n      // console.log( \"-->> C  === \" + isValid );\n\n      /* var isValid = this.equipamentosIDsBD.contains( idData );\r\n      console.log( \"Valida equip. ID = \" + isValid );*/\n    },\n\n    getDatalistId(type) {\n      return `id-equips-list-${type}`;\n    },\n    /* Lista com as opções disponíveis, excluindo-se aqueles IDs de equipamento já escolhidos. */\n    getFilteredDatalistOptions(type) {\n      return this.getDatalistOptions(type).filter(item => !this.inputEquipIDAtivos.includes(item));\n    },\n    /* De acordo com o TIPO do equipamento, será filtrado os objetos específicos para \r\n    ser retornado apenas a lista com os Ientificadores da DATALIST */\n    getDatalistOptions(type) {\n      // console.log( \"Tipo datalist = \" + type );\n      var dataList = [];\n      if (type === 'Colete') {\n        // console.log( JSON.stringify(this.coletesBD) );\n        dataList = this.coletesBD.filter(obj => typeof obj.id === 'string').map(obj => obj.id);\n        // return IDs;\n      } else if (type === 'Rádio HT') {\n        // return this.radiosBD;\n        dataList = this.radiosBD.filter(obj => typeof obj.id === 'string').map(obj => obj.id);\n        // return IDs;\n      } else if (type === 'Viatura') {\n        dataList = this.viaturasBD.filter(obj => typeof obj.placa === 'string').map(obj => obj.placa);\n        // console.log( \"placas = \" + JSON.stringify( placas ) );\n        // return placas;\n      }\n\n      return dataList;\n    },\n    async getEquipamentosBD(tipoEq) {\n      var sendData = {\n        dados: {\n          entidade: 'equipamento',\n          operacao: 'consultar'\n        }\n      };\n      console.log(\"-- SEND ==||>> \" + JSON.stringify(sendData).replace(/\\\\/g, \"\") + tipoEq);\n      try {\n        var response = await axios.post(this.$SERVICES_ENDPOINT_URL, sendData);\n        // console.log( \"Resposta API = \" +  JSON.stringify( response.data , null,  2 ) );\n        var data = response.data; // -->>> Isso chama o watcher !\n        // console.log(\"Dados retornados = \" +  this.responseData.dados );\n        // console.log('-DATA == ' + JSON.stringify(  data ).replace( /\\\\/g, \"\" )  );\n        // console.log( \"MSG = \" + data.message + \"|| code= \" + data.code );\n        this.equipamentosBD = data.data;\n      } catch (error) {\n        console.error(error);\n      }\n      // console.log( \"E = \" + JSON.stringify( this.equipamentosBD ));   \n      var array = this.equipamentosBD;\n      this.viaturasBD = array.filter(item => item.tipo === \"VIATURA\").map(({\n        id,\n        numSerie,\n        placa\n      }) => ({\n        id,\n        numSerie,\n        placa\n      }));\n      this.coletesBD = array.filter(item => item.tipo === \"COLETE\").map(({\n        id,\n        numSerie\n      }) => ({\n        id,\n        numSerie\n      }));\n      this.radiosBD = array.filter(item => item.tipo === \"RADIO_HT\").map(({\n        id,\n        numSerie\n      }) => ({\n        id,\n        numSerie\n      }));\n\n      /* console.log( \"Viatura = \" + JSON.stringify( this.viaturasBD ) );\r\n      console.log( \"Radio = \" + JSON.stringify( this.radiosBD ) );\r\n      console.log( \"Coletes = \" + JSON.stringify( this.coletesBD ) );*/\n\n      /*****************************************************\r\n       \r\n      ****************************************************/\n    },\n\n    isEquipamentosValidos() {\n      console.log(\"==>> isEquipamentosValidos?\" + this.equipamentos.length);\n      if (this.equipamentos.length > 0) return false;\n    },\n    /* ********* NOVA FUNÇÃO DE ADAPTAÇÃO DA ESTRUTURA DE DADOS ********* */\n    cadastrarAgenteBD() {\n      var vet = []; // vet[0] = {  idOperacao: 1, dataDevolucao: \"0000-00-00\", horaDevolucao: \"0000-00-00\", \"idEquipamento\":\"123\", \"isAvariado\":null, \"matriculaAgente\":\"123\"} \n      var matricula;\n      var tam;\n      var auxObj;\n\n      // 1- CASO CADASTRANDO O AGENTE \n      if (this.isAddOperacoesPage) {\n        console.log(\"MATRICULA ==>>> \" + this.usuMatriculaLocal);\n        matricula = this.usuMatriculaLocal.split(\" - \")[0];\n        console.log(this.idOperacao + \"||matr =\" + matricula + \" --> lista ->\" + JSON.stringify(vet));\n\n        // var lista;\n\n        tam = this.equipamentos.length;\n        for (var i = 0; i < tam; i++) {\n          console.log(\"i[ \" + i + \"] =>> \" + JSON.stringify(this.equipamentos[i]));\n          console.log(\"ID Ope. ==>> \" + this.idOperacao);\n          if (this.equipamentos[i].kmIni == null) this.equipamentos[i].kmIni = 0.0;\n          auxObj = {\n            idOperacao: this.idOperacao,\n            dataDevolucao: \"0000-00-00\",\n            horaDevolucao: \"0000-00-00\",\n            idEquipamento: this.equipamentos[i].idData,\n            isAvariado: null,\n            tipoEquipamento: null,\n            matriculaAgente: matricula,\n            kmIni: this.equipamentos[i].kmIni,\n            kmFim: 0.0\n          };\n          //**** Ajuste/Conversão de valores/dados para os valores da tabela 'equipamentos' no BD. \n          if (this.equipamentos[i].tipo == \"Viatura\") auxObj.tipoEquipamento = \"VIATURA\";\n          if (this.equipamentos[i].tipo == \"Rádio HT\") auxObj.tipoEquipamento = \"RADIO_HT\";\n          if (this.equipamentos[i].tipo == \"Colete\") auxObj.tipoEquipamento = \"COLETE\";\n          vet[i] = auxObj;\n          console.log(\"VET AGENTE ==>> \" + JSON.stringify(vet[i]));\n        }\n        console.log(JSON.stringify(vet));\n\n        // 2- CASO ATUALIZANDO O AGENTE, NO HISTÓRICO\n      } else {\n        console.log(\" CASO ATUALIZANDO O AGENTE....\");\n        matricula = this.usuMatriculaLocal;\n        console.log(this.idOperacao + \"||matr =\" + matricula + \" --> lista ->\" + JSON.stringify(vet));\n        tam = this.equipamentos.length;\n        for (i = 0; i < tam; i++) {\n          console.log(\"i[ \" + i + \"] =>> \" + JSON.stringify(this.equipamentos[i]));\n          auxObj = {\n            idOperacao: this.idOperacao,\n            dataDevolucao: this.equipamentos[i].dataDevolucao,\n            horaDevolucao: this.equipamentos[i].horaDevolucao,\n            idEquipamento: this.equipamentos[i].idData,\n            isAvariado: null,\n            tipoEquipamento: null,\n            matriculaAgente: this.equipamentos[i].matriculaAgente,\n            kmIni: this.equipamentos[i].kmIni,\n            kmFim: this.equipamentos[i].kmFim\n          };\n          //**** Ajuste/Conversão de valores/dados para os valores da tabela 'equipamentos' no BD. \n          if (this.equipamentos[i].tipo == \"Viatura\") auxObj.tipoEquipamento = \"VIATURA\";\n          if (this.equipamentos[i].tipo == \"Rádio HT\") auxObj.tipoEquipamento = \"RADIO_HT\";\n          if (this.equipamentos[i].tipo == \"Colete\") auxObj.tipoEquipamento = \"COLETE\";\n          vet[i] = auxObj;\n          console.log(\"VET AGENTE atualiza ==>> \" + JSON.stringify(vet[i]));\n        }\n        console.log(JSON.stringify(vet));\n      }\n      this.cadastrarAgenteBD_LEGADO(vet);\n    },\n    // - FECHA cadastrarAgenteBD\n    cadastrarAgenteBD_LEGADO(vet) {\n      // this.modalIsVisible = true;\n      console.log(\"CADASTRAR !!!!!\");\n      var operacaoStr = \"\";\n      // 1- CASO CADASTRANDO O AGENTE \n      if (this.isAddOperacoesPage) operacaoStr = \"cadastrar\";else operacaoStr = \"atualizar\";\n      var sendData = {\n        dados: {\n          entidade: 'usoEquipamento',\n          operacao: operacaoStr,\n          objeto: {}\n        }\n      };\n      for (var i = 0; i < vet.length; i++) {\n        var objAuxStr = JSON.stringify(vet[i]).replace(/\\\\/g, \"\");\n        // console.log( \"objAuxStr = \" + objAuxStr );\n        sendData.dados.objeto = JSON.parse(objAuxStr); // vet[0]; // JSON.stringify( this.vet[0] ).replace( /\\\\/g, \"\" ).replace(\"id\", \"id_operacao\");\n        // this.validaNovaLinha( sendData.dados.objeto );\n        // console.log( \"objAuxStr = \" + objAuxStr );\n\n        console.log(\"-- SEND ==||>> \" + JSON.stringify(sendData).replace(/\\\\/g, \"\"));\n        axios.post(this.$SERVICES_ENDPOINT_URL, sendData).then(response => {\n          console.log(\"Resposta API ==>>> \" + JSON.stringify(response.data).replace(/\\\\/g, \"\"));\n          var checkSQLErrorStr = JSON.stringify(response.data).replace(/\\\\/g, \"\");\n          console.log(\"Error? \" + checkSQLErrorStr.search(\"ERROR:\"));\n          if (checkSQLErrorStr.search(\"ERROR:\") != 0) {\n            this.modalMessage = \"Erro de conexão: banco de dados.\";\n            this.modalIsVisible = true;\n            console.log(\"AKIIIIII !!!!!!! \");\n          }\n          var data = response.data; // -->>> Isso chama o watcher !\n          // console.log(\"Dados retornados = \" +  this.responseData.dados );\n          /*console.log('-DATA ==>>> ' + JSON.stringify(  response.data )  );\r\n          console.log( \"MSSG ==>>> \" + data.message + \"|| code= \" + data.code );*/\n\n          if (data.code == 0) {\n            this.hasSavedOnDatabase = true;\n            this.sendStatusToParent();\n            // console.log( \"ID = \" + data.data.id );\n            // this.idValue = data.data.id;\n          }\n\n          this.modalMessage = data.message;\n          this.modalIsVisible = true;\n        }).catch(error => {\n          this.error = error.message;\n        });\n      } // END-FOR\n      // this.hasSavedOnDatabase = true;\n    }\n  }\n};","map":{"version":3,"names":["axios","MyModal","BButton","KnobControl","props","compTableItens","idOperacao","required","usuMatricula","name","components","watch","newValue","console","log","usuMatriculaLocal","computed","IS_PAGE_EDITABLE","$store","state","isPageEditable","created","$route","isAddOperacoesPage","cadastrarBtnName","commit","str","JSON","stringify","i","length","tipoEquipamento","equipSelecionado","equipamento","id","equipamentos","url","getImageUrl","imageSize","getImageSize","tipo","idDataLabel","idData","idEquipamento","matriculaAgente","kmIni","kmFim","push","data","LIMITE_EQUIPAMENTOS","mVisible","equipOpcoes","equipId","inputEquipIDAtivos","equipamentosBD","equipamentosIDsBD","coletesBD","radiosBD","viaturasBD","kmInicial","kmFinal","hasSavedOnDatabase","isTableValidationOk","modalIsVisible","modalMessage","vet","kmEstimado","bairroOperacao","bairros","value","text","agenteResponsavel","agentes","methods","isComponentDisabled","velocimentoIniLabel","velocimentoFimLabel","handleCloseModal","handleAcceptModal","handleRejectModal","showModal","onModalClose","addEquipComponent","sendStatusToParent","$emit","require","removeEquipComponent","filter","image","getEquipamentosBD","hasViatura","some","equip","validaEquipamentoID","equipamentoObj","isValid","getDatalistOptions","includes","msg","getDatalistId","type","getFilteredDatalistOptions","item","dataList","obj","map","placa","tipoEq","sendData","dados","entidade","operacao","replace","response","post","$SERVICES_ENDPOINT_URL","error","array","numSerie","isEquipamentosValidos","cadastrarAgenteBD","matricula","tam","auxObj","split","dataDevolucao","horaDevolucao","isAvariado","cadastrarAgenteBD_LEGADO","operacaoStr","objeto","objAuxStr","parse","then","checkSQLErrorStr","search","code","message","catch"],"sources":["src/components/AppEquipamentosGrid.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <b-modal v-model=\"mVisible\" @hide=\"onModalClose\" hide-footer>\r\n        <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\"> Selecione Equipamento </h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <b-form-select v-model=\"equipSelecionado\" :options=\"equipOpcoes\"></b-form-select>\r\n        </div>\r\n      </b-modal>\r\n  \r\n      <my-modal id=\"myModal\" title=\"Confirmação\" :message=\"modalMessage\" \r\n          :visible=\"modalIsVisible\"\r\n          @update:visible=\"modalIsVisible = $event\"\r\n          @on-close-modal=\"handleCloseModal()\"\r\n          @on-accept-modal=\"handleAcceptModal()\"\r\n          @on-reject-modal=\"handleRejectModal()\"\r\n       ></my-modal>\r\n      \r\n      <div class=\"btn-add-equip\">\r\n        <b-button v-if=\"IS_PAGE_EDITABLE && !hasSavedOnDatabase\" class=\"btn-add\" variant=\"success\" @click=\"showModal()\">\r\n          <i class=\"fas fa-plus\"></i> Adicionar Equipamento\r\n        </b-button>\r\n      </div>\r\n\r\n      <div class=\"image-grid\"> <!-- grid -->\r\n          <div v-for=\"equip in equipamentos\" :key=\"equip.id\" class=\"image-column\">\r\n            <!-- Img -->\r\n            <div class=\"image-wrapper\">\r\n                <img :style=\"{ width: equip.imageSize, height: equip.imageSize }\" :src=\"equip.url\" alt=\"Image\" >\r\n            </div>\r\n\r\n            <!-- Tipo -->\r\n            <p><b> {{ equip.tipo }} </b></p>\r\n            \r\n            <!-- Input\r\n            <b-form-input class=\"mx-auto\" style=\"width: 120px\" type=\"text\" autocomplete=\"off\" list=\"id-equips-list\" v-model=\"equip.idData\" @blur=\"validaEquipamentoID( equip.idData )\"></b-form-input>\r\n            <datalist id=\"id-equips-list\"> <option v-for=\"eq in equipamentosIDsBD\" :value=\"eq.numSerie\" :key=\"eq.id\">{{ eq.numSerie }}</option>\r\n            </datalist> -->\r\n\r\n            <!-- <div class=\"idDataLabel\"> {{ equip.idDataLabel }} : </div> -->\r\n            <b-form-input \r\n                class=\"mx-auto\"\r\n                style=\"width: 120px\" \r\n                type=\"text\"\r\n                autocomplete=\"off\" \r\n                :list=\"getDatalistId(equip.tipo)\" \r\n                v-model=\"equip.idData\"\r\n                @blur=\"validaEquipamentoID( equip )\"\r\n                :disabled=\"( !isAddOperacoesPage || hasSavedOnDatabase )\"> <!-- CASO PAG EDITÁVEL + FOI SALVO ON BD -->\r\n            </b-form-input>\r\n            <datalist :id=\"getDatalistId(equip.tipo)\">\r\n              <option v-for=\"option in getFilteredDatalistOptions( equip.tipo )\" :value=\"option\" :key=\"option\">{{ option }}</option>\r\n            </datalist>\r\n            \r\n            <div v-if=\"( equip.tipo == 'Viatura' )\">\r\n              <div style=\"font-size: 12px;padding-top: 5px;\"><b> Km Inicial: </b></div>\r\n              <knob-control \r\n                  v-if=\"( equip.tipo == 'Viatura' )\"\r\n                  :disabled=\"isComponentDisabled()\"\r\n                  :value-display-function=\"velocimentoIniLabel\"\r\n                  v-model=\"equip.kmIni\"\r\n                  size=\"80\"\r\n                  stepSize=\"10.5\"\r\n                  :min=\"0\"\r\n                  :max=\"5000\"\r\n                  :stroke-width=\"8\"\r\n              />\r\n              <div v-if=\"( ( equip.tipo == 'Viatura' ) && (!isAddOperacoesPage) )\"\r\n              style=\"font-size: 12px;padding-top: 5px;\"><b> Km Final: </b></div>\r\n              <knob-control \r\n                  v-if=\"( ( equip.tipo == 'Viatura' ) && (!isAddOperacoesPage) )\"\r\n                  :disabled=\"isComponentDisabled()\"\r\n                  :value-display-function=\"velocimentoFimLabel\"\r\n                  v-model=\"equip.kmFim\"\r\n                  size=\"80\"\r\n                  stepSize=\"10.5\"\r\n                  :min=\"0\"\r\n                  :max=\"5000\"\r\n                  :stroke-width=\"8\"\r\n              />\r\n              <!-- kmInicial ===> {{ equip.kmIni }}\r\n                   kmFinal   ===> {{ equip.kmFim  }} -->\r\n            </div>\r\n\r\n            <!-- Botão LIXO -->\r\n            <button class=\"btn btn-link\" \r\n              @click=\"removeEquipComponent( equip.id )\"\r\n              :disabled=\"isComponentDisabled()\">\r\n              <i class=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n\r\n            <div v-if=\"!isAddOperacoesPage && !isComponentDisabled()\" class=\"align-bottom\">\r\n                 <label class=\"titulo-operacao\" for=\"example-datepicker\"> Data de Devolução: </label>\r\n                 <b-form-datepicker id=\"example-datepicker\"  v-model=\"equip.dataDevolucao\" class=\"mb-2\"  style=\"width:200px\"></b-form-datepicker>\r\n                 <label class=\"titulo-operacao\" for=\"inline-form-input-name\" > Horário de Devolução: </label><br>\r\n                 <b-form-timepicker v-model=\"equip.horaDevolucao\" locale=\"pt\" style=\"width:200px\"></b-form-timepicker>\r\n            </div>\r\n            \r\n            \r\n          </div>\r\n          </div>\r\n  \r\n      <br>\r\n    <!--\r\n      <div class=\"table-container\">\r\n      <div class=\"table-centralizer\">\r\n        ################### DEBUG AREA ################### \r\n        {{ this.idOperacao }}\r\n        {{ this.usuMatricula }}\r\n        IS_PAGE_EDITABLE ? =  {{ IS_PAGE_EDITABLE }}\r\n        hasSavedOnDatabase? {{ hasSavedOnDatabase }} \r\n      </div>\r\n      </div>\r\n    -->\r\n\r\n      <b-button\r\n         v-if=\"IS_PAGE_EDITABLE && !hasSavedOnDatabase\" \r\n         class=\"btn-add\" variant=\"primary\" \r\n         @click=\"cadastrarAgenteBD()\"\r\n         :disabled=\"isEquipamentosValidos()\">\r\n         <i class=\"fa fa-database\"></i> \r\n         {{ this.cadastrarBtnName }}\r\n      </b-button>\r\n  </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios       from 'axios';\r\n  import MyModal     from '@/components/MyModal.vue';\r\n  import { BButton } from \"bootstrap-vue\";\r\n  import KnobControl from 'vue-knob-control';\r\n  export default \r\n  {\r\n    props: \r\n    {\r\n      compTableItens:[],\r\n      idOperacao:   {\r\n         required: true  \r\n      }, \r\n      usuMatricula: {\r\n        required: true  \r\n      },\r\n    },\r\n    name: 'AppEquipamentosGrid',\r\n    \r\n    components:     {\r\n      MyModal,\r\n      BButton,\r\n      KnobControl,\r\n    },\r\n    watch:          { \r\n        usuMatricula( newValue )         \r\n        {\r\n          console.log( \"MATRICULA !! >>> \" + this.usuMatriculaLocal );\r\n          this.usuMatriculaLocal = newValue;\r\n        }\r\n    },\r\n    computed:\r\n    {  \r\n        // CONSTANTE\r\n        IS_PAGE_EDITABLE()  {\r\n            return this.$store.state.isPageEditable;\r\n        }, \r\n    },\r\n    /* Realiza montagem do componente caso seja leitura/Busca Histórico, com base no properties passado*/\r\n    created() \r\n    {\r\n        // alert( \"E = \" + JSON.stringify( this.equipamentosBD ) );   \r\n        console.log( \"Create Table where?? >> \" + this.$route.name );\r\n        \r\n        if ( this.$route.name == \"addOperacoes\" )   {\r\n             this.isAddOperacoesPage = true;\r\n        }    else    {\r\n             this.isAddOperacoesPage = false;\r\n             this.cadastrarBtnName = \"Atualizar Agente/Equipamento\";\r\n        }\r\n        this.$store.commit( 'setIsPageEditable', this.isAddOperacoesPage );\r\n        var str = this.$store.state.isPageEditable;\r\n        console.log( \"AppEquipamentosGRID | isPageEditable ? \" + str );\r\n        console.log(\"-AppEquipGrid || isAddOperacoes? \" + this.isAddOperacoesPage );\r\n\r\n        /* Monta o componente de acordo com os dados recebidos do BD, na propriedade atualizada no watch\r\n           this.compTableItens */\r\n        console.log( \"CAMPOS >>\" + JSON.stringify( this.compTableItens ) );\r\n\r\n        // var tam = this.compTableItens.length;\r\n        if( this.compTableItens != null ) {\r\n             // console.log( \"CREATED APP-GRID ||| IS_PAGE_EDITABLE ? = \" + this.IS_PAGE_EDITABLE );\r\n        \r\n        for ( var i=0; i<this.compTableItens.length; i++ )      \r\n        {     \r\n              //console.log(\"Tipo =>> \" + this.compTableItens[i].tipoEquipamento );\r\n\r\n              if ( this.compTableItens[i].tipoEquipamento == \"RADIO_HT\" ) {\r\n                   this.equipSelecionado = \"Rádio HT\";\r\n              }\r\n              else if ( this.compTableItens[i].tipoEquipamento == \"VIATURA\" ) {\r\n                  this.equipSelecionado = \"Viatura\";\r\n                  // this.kmInicial = parseFloat( this.compTableItens[i].kmIni );\r\n              }\r\n              else if ( this.compTableItens[i].tipoEquipamento == \"COLETE\" ) {\r\n                  this.equipSelecionado =  \"Colete\";\r\n              }\r\n              // console.log( \"SELECTED !!!!! \" + this.equipSelecionado );\r\n\r\n              const equipamento   =   {\r\n                    id: this.equipamentos.length + 1,\r\n                    url: this.getImageUrl(),\r\n                    imageSize: this.getImageSize(),\r\n                    tipo: this.equipSelecionado,\r\n                    idDataLabel : this.equipSelecionado,\r\n                    idData: this.compTableItens[i].idEquipamento,\r\n                    matriculaAgente: this.compTableItens[i].matriculaAgente,\r\n                    kmIni: this.compTableItens[i].kmIni,\r\n                    kmFim: this.compTableItens[i].kmFim,\r\n              } \r\n              this.equipamentos.push( equipamento );\r\n        }\r\n      }\r\n    },\r\n    data() \r\n    {\r\n      return  {\r\n\r\n        /***** CONSTANTES *****/\r\n        LIMITE_EQUIPAMENTOS: 6,\r\n\r\n        /***** Modal de seleção *****/\r\n        mVisible: false,\r\n        equipSelecionado: null, /* Tipo de Equipamento selecionado no modal */\r\n        equipOpcoes: [ 'Talonário', 'Rádio HT', 'Viatura', 'Colete', 'Etilômetro', 'Todos' ],\r\n        equipId: [],\r\n        /***** Modal de seleção *****/\r\n\r\n        inputEquipIDAtivos: [], /* lista de dados ativos */\r\n        cadastrarBtnName: \"Cadastrar Agente\",\r\n\r\n        equipamentos: [], \r\n        equipamentosBD: [],     /* Dados retornados da tabela de Equipamento */\r\n        equipamentosIDsBD: [],  /* Conterá lista de placas, N° séries, ou IDs carregados do BD... */\r\n\r\n        coletesBD:[],\r\n        radiosBD:[],\r\n        viaturasBD:[],\r\n\r\n        kmInicial: 0.0, /* Define a Km inicial, p/ o atual componente inserido (Caso seja Viatura) */\r\n        kmFinal: 0.0,\r\n        usuMatriculaLocal: null,\r\n        isAddOperacoesPage: -1, /** Verifica se esta página atual é a de adicionar Operações */\r\n  \r\n        /***** Dados de controle *****/\r\n        hasSavedOnDatabase: false,\r\n        isTableValidationOk: false,\r\n        modalIsVisible: false,\r\n        modalMessage: \"Deseja confirmar a operação?\",\r\n        vet: [], \r\n        kmEstimado: '0.0',\r\n        bairroOperacao: null,\r\n        bairros: [\r\n            { value: 1, text: 'Miramar' },\r\n            { value: 2, text: 'Bessa' },\r\n            { value: 2, text: 'Manaira' },\r\n        ],\r\n        agenteResponsavel: null,\r\n        agentes: [\r\n            { value: 1, text: 'Agente 1' },\r\n            { value: 2, text: 'Agente 2' },\r\n            { value: 2, text: 'Agente 3' },\r\n            { value: 2, text: 'Agente 4' },\r\n            { value: 2, text: 'Agente 5' },\r\n            { value: 2, text: 'Agente 6' },\r\n            { value: 2, text: 'Agente 7' },\r\n            { value: 2, text: 'Agente 8' }\r\n        ], \r\n      };\r\n    }, \r\n    methods:     {\r\n      isComponentDisabled()\r\n      {\r\n        /**** Caso (não editavel/pág. sem ser Add) OU (salvo no BD)... desabilitar ****/\r\n        var isComponentDisabled = ( !this.IS_PAGE_EDITABLE || this.hasSavedOnDatabase );\r\n        // console.log( \"isComponentDisabled ? \" + isComponentDisabled );\r\n        return isComponentDisabled;\r\n      },\r\n      velocimentoIniLabel( kmInicial ) { \r\n          console.log( \"Valor real = \" + kmInicial );\r\n          return ( kmInicial * 100 ) + \"\";\r\n      },\r\n      velocimentoFimLabel( kmFinal ) { \r\n          console.log( \"Valor real = \" + kmFinal );\r\n          return ( kmFinal * 100 ) + \"\";\r\n      },\r\n      handleCloseModal()  \r\n      {\r\n          // console.log(\"Close ... \");\r\n          this.modalIsVisible = false;\r\n          this.modalMessage = \"x\";\r\n      },\r\n      handleAcceptModal() \r\n      {\r\n          // console.log(\"Accept ... \");\r\n          this.modalIsVisible = false;\r\n          this.modalMessage = \"y\";\r\n      },\r\n      handleRejectModal() \r\n      {\r\n          // console.log(\"Reject ... \");\r\n          this.modalIsVisible = false;\r\n          this.modalMessage = \"d\";\r\n      },\r\n      showModal()           {\r\n          this.mVisible = true;\r\n      },\r\n      onModalClose()        {\r\n          console.log('Selected Option:', this.equipSelecionado );\r\n\r\n          if ( this.equipSelecionado == \"Todos\" ) \r\n          {\r\n              for( var i=0; i<4; i++ )    {\r\n                   console.log( \"i = \" + i + \"] \" + this.equipOpcoes[i] );\r\n                   this.equipSelecionado = this.equipOpcoes[i];\r\n                   this.addEquipComponent();\r\n              }\r\n          } else {\r\n              \r\n             if ( this.equipSelecionado != null ) \r\n                  this.addEquipComponent();\r\n          }\r\n      },\r\n      sendStatusToParent() \r\n      {\r\n          console.log( \"Sending data to parent....\");\r\n          this.$emit('data-updated', this.hasSavedOnDatabase );\r\n      },\r\n      getImageUrl() \r\n      {\r\n          // Logic to determine the image URL based on equipSelecionado\r\n          if ( this.equipSelecionado === 'Viatura' )          {\r\n               return require('@/assets/viatura.png');\r\n          } \r\n          else if ( this.equipSelecionado === 'Talonário' )   {\r\n               return require('@/assets/talonario.png');\r\n          } \r\n          else if ( this.equipSelecionado === 'Rádio HT' )    {\r\n               return require('@/assets/radio.jpg');\r\n          } \r\n          else if ( this.equipSelecionado === 'Etilômetro' )  {\r\n               return require('@/assets/etilometro.png');\r\n          } \r\n          else if ( this.equipSelecionado === 'Colete' )      {\r\n               return require('@/assets/colete_new.jpg');\r\n          }\r\n      },\r\n      getImageSize()  \r\n      {\r\n          if ( ( this.equipSelecionado === 'Viatura' ) || ( this.equipSelecionado === 'Talonário' ) )\r\n                return '30%'; \r\n          else if ( this.equipSelecionado === 'Rádio HT' )  \r\n              return '60%';\r\n          else if ( this.equipSelecionado === 'Etilômetro' )  \r\n              return '50%';\r\n          else if ( this.equipSelecionado === 'Colete' )  \r\n              return '30%';\r\n      },\r\n      removeEquipComponent( id ) \r\n      {\r\n          this.equipamentos = this.equipamentos.filter((image) => image.id !== id);\r\n      },\r\n      addEquipComponent() \r\n      {\r\n        // console.log( \"LISTA EQUIPS =>> \" + JSON.stringify( this.LISTA_EQUIPAMENTOS_SELECIONADOS ) );\r\n        console.log( \"-->> kmInicial = \" + this.kmInicial );\r\n\r\n        if ( this.equipamentos.length >= this.LIMITE_EQUIPAMENTOS ) \r\n        {\r\n             this.modalMessage   = \"Limite de equipamentos atingido.\";  \r\n             this.modalIsVisible = true;\r\n             return;\r\n        }\r\n        \r\n        this.getEquipamentosBD( this.equipSelecionado );\r\n        if ( this.equipSelecionado == 'Viatura' ) \r\n        {\r\n             const hasViatura = this.equipamentos.some(equip => equip.tipo === 'Viatura');\r\n             if ( hasViatura ) \r\n             {\r\n                 this.modalMessage   = \"Viatura já inserida para este agente.\";  \r\n                 this.modalIsVisible = true;\r\n                 return;\r\n             }\r\n        }\r\n        const equipamento   =   {\r\n              id: this.equipamentos.length + 1,\r\n              url: this.getImageUrl(),\r\n              imageSize: this.getImageSize(),\r\n              tipo: this.equipSelecionado,\r\n              idDataLabel : this.equipSelecionado === 'Viatura' ? \"Placa\" : ( this.equipSelecionado === 'Rádio HT' || this.equipSelecionado === 'COLETE' ? 'Id.' : 'N° de Série' ),\r\n              idData: '', //this.equipSelecionado === 'Viatura' ? \"Placa\" : ( this.equipSelecionado === 'Rádio HT' || this.equipSelecionado === 'COLETE' ? 'Id.' : 'N° de Série' ),\r\n              kmIni: null,\r\n              kmFim: null\r\n        };\r\n        this.equipamentos.push( equipamento );\r\n      },\r\n      validaEquipamentoID( equipamentoObj ) \r\n      {\r\n      /* console.log( \"valida\" + JSON.stringify( equipamentoObj ));\r\n         console.log(\"--idData ==>>> \" + equipamentoObj.idData );\r\n         console.log(\"--Viaturas ==>>> \" + JSON.stringify( this.viaturasBD ));*/\r\n         \r\n         /*var vet = this.getDatalistOptions( equipamentoObj.tipo );\r\n         console.log( \"->> Valida lista equips === \" + JSON.stringify( vet ) );*/\r\n\r\n         // A lista do objeto atual, contem o ID selecionado ?!?\r\n         var isValid = this.getDatalistOptions( equipamentoObj.tipo ).includes( equipamentoObj.idData );\r\n\r\n         var msg = \"\";\r\n         \r\n         if ( equipamentoObj.tipo == \"Viatura\" )\r\n              msg = \"Placa inválida\";\r\n         else if ( equipamentoObj.tipo == \"Colete\" )\r\n              msg = \"N° de série inválido\";\r\n         else if ( equipamentoObj.tipo == \"Rádio HT\" )\r\n              msg = \"Identificador inválido\";\r\n\r\n         if ( !isValid ) \r\n         {\r\n            this.modalIsVisible = true;\r\n            this.modalMessage = msg;\r\n          }    else   {\r\n            this.inputEquipIDAtivos.push( equipamentoObj.idData );\r\n          }\r\n         // console.log( \"-->> C  === \" + isValid );\r\n         \r\n        /* var isValid = this.equipamentosIDsBD.contains( idData );\r\n        console.log( \"Valida equip. ID = \" + isValid );*/\r\n      },\r\n      getDatalistId( type ) \r\n      {\r\n        return `id-equips-list-${type}`;\r\n      },\r\n      \r\n      /* Lista com as opções disponíveis, excluindo-se aqueles IDs de equipamento já escolhidos. */\r\n      getFilteredDatalistOptions( type )  {\r\n          return this.getDatalistOptions( type ).filter( item => !this.inputEquipIDAtivos.includes( item ) );\r\n      },\r\n      /* De acordo com o TIPO do equipamento, será filtrado os objetos específicos para \r\n      ser retornado apenas a lista com os Ientificadores da DATALIST */\r\n      getDatalistOptions( type )  {\r\n\r\n          // console.log( \"Tipo datalist = \" + type );\r\n           var dataList = [];\r\n\r\n          if (type === 'Colete')          {\r\n              // console.log( JSON.stringify(this.coletesBD) );\r\n              dataList = this.coletesBD\r\n                  .filter(obj => typeof obj.id === 'string')\r\n                  .map(obj => obj.id);\r\n              // return IDs;\r\n\r\n          } else if (type === 'Rádio HT') {\r\n              // return this.radiosBD;\r\n              dataList = this.radiosBD\r\n                  .filter(obj => typeof obj.id === 'string')\r\n                  .map(obj => obj.id);\r\n              // return IDs;\r\n          \r\n          } else if (type === 'Viatura')  {\r\n\r\n             dataList = this.viaturasBD\r\n                  .filter(obj => typeof obj.placa === 'string')\r\n                  .map(obj => obj.placa);\r\n              // console.log( \"placas = \" + JSON.stringify( placas ) );\r\n              // return placas;\r\n          }\r\n          return dataList;\r\n      },\r\n      async getEquipamentosBD( tipoEq )             \r\n      {\r\n            var sendData = {\r\n                dados: {\r\n                    entidade: 'equipamento',\r\n                    operacao: 'consultar'\r\n                }\r\n            };\r\n            console.log( \"-- SEND ==||>> \" + JSON.stringify( sendData ).replace( /\\\\/g, \"\" ) + tipoEq );\r\n            try {\r\n                  var response = await axios.post( this.$SERVICES_ENDPOINT_URL , sendData );\r\n                  // console.log( \"Resposta API = \" +  JSON.stringify( response.data , null,  2 ) );\r\n                  var data = response.data; // -->>> Isso chama o watcher !\r\n                  // console.log(\"Dados retornados = \" +  this.responseData.dados );\r\n                  // console.log('-DATA == ' + JSON.stringify(  data ).replace( /\\\\/g, \"\" )  );\r\n                  // console.log( \"MSG = \" + data.message + \"|| code= \" + data.code );\r\n                  this.equipamentosBD = data.data;\r\n            }  catch ( error )  {\r\n                 console.error(error);\r\n            }                    \r\n                // console.log( \"E = \" + JSON.stringify( this.equipamentosBD ));   \r\n                var array = this.equipamentosBD;\r\n                this.viaturasBD = array\r\n                .filter( item => item.tipo === \"VIATURA\" )\r\n                .map(({ id, numSerie, placa }) => ({ id, numSerie, placa }));\r\n                \r\n                this.coletesBD = array\r\n                .filter( item => item.tipo === \"COLETE\" )\r\n                .map(({ id, numSerie }) => ({ id, numSerie }));\r\n\r\n                this.radiosBD = array\r\n                .filter( item => item.tipo === \"RADIO_HT\" )\r\n                .map(({ id, numSerie }) => ({ id, numSerie }));\r\n\r\n                /* console.log( \"Viatura = \" + JSON.stringify( this.viaturasBD ) );\r\n                console.log( \"Radio = \" + JSON.stringify( this.radiosBD ) );\r\n                console.log( \"Coletes = \" + JSON.stringify( this.coletesBD ) );*/\r\n        \r\n               \r\n              /*****************************************************\r\n               \r\n              ****************************************************/\r\n      },\r\n      isEquipamentosValidos()\r\n      {\r\n        console.log( \"==>> isEquipamentosValidos?\" + this.equipamentos.length );\r\n        if ( this.equipamentos.length > 0 )\r\n             return false;\r\n      },\r\n      \r\n      /* ********* NOVA FUNÇÃO DE ADAPTAÇÃO DA ESTRUTURA DE DADOS ********* */\r\n       cadastrarAgenteBD() \r\n       {  \r\n            var vet = []; // vet[0] = {  idOperacao: 1, dataDevolucao: \"0000-00-00\", horaDevolucao: \"0000-00-00\", \"idEquipamento\":\"123\", \"isAvariado\":null, \"matriculaAgente\":\"123\"} \r\n            var matricula;\r\n            var tam;\r\n            var auxObj;\r\n\r\n            // 1- CASO CADASTRANDO O AGENTE \r\n            if ( this.isAddOperacoesPage )    \r\n            {\r\n                console.log( \"MATRICULA ==>>> \" + this.usuMatriculaLocal );\r\n                matricula = this.usuMatriculaLocal.split(\" - \")[0];\r\n                console.log( this.idOperacao + \"||matr =\" +  matricula + \" --> lista ->\" +  JSON.stringify(  vet ));\r\n                \r\n                // var lista;\r\n\r\n                tam = this.equipamentos.length;\r\n                for  ( var i=0; i<tam; i++ )     \r\n                {\r\n                    console.log( \"i[ \" + i + \"] =>> \" + JSON.stringify( this.equipamentos[i] ));\r\n                    console.log( \"ID Ope. ==>> \" + this.idOperacao );\r\n\r\n                    if ( this.equipamentos[i].kmIni == null ) \r\n                         this.equipamentos[i].kmIni = 0.0;\r\n                    auxObj    =  {   \r\n                          idOperacao : this.idOperacao, \r\n                          dataDevolucao : \"0000-00-00\",\r\n                          horaDevolucao : \"0000-00-00\",\r\n                          idEquipamento : this.equipamentos[i].idData,\r\n                          isAvariado    : null,\r\n                          tipoEquipamento : null,\r\n                          matriculaAgente : matricula,\r\n                          kmIni: this.equipamentos[i].kmIni,\r\n                          kmFim: 0.0,\r\n                    }\r\n                    //**** Ajuste/Conversão de valores/dados para os valores da tabela 'equipamentos' no BD. \r\n                    if ( this.equipamentos[i].tipo == \"Viatura\"  ) auxObj.tipoEquipamento = \"VIATURA\";\r\n                    if ( this.equipamentos[i].tipo == \"Rádio HT\" ) auxObj.tipoEquipamento = \"RADIO_HT\";\r\n                    if ( this.equipamentos[i].tipo == \"Colete\"   ) auxObj.tipoEquipamento = \"COLETE\";             \r\n                    vet[ i ] = auxObj;\r\n                    console.log( \"VET AGENTE ==>> \" + JSON.stringify( vet[ i ] ) );\r\n                }\r\n                console.log( JSON.stringify( vet ) );\r\n\r\n              // 2- CASO ATUALIZANDO O AGENTE, NO HISTÓRICO\r\n              } else {\r\n                console.log(\" CASO ATUALIZANDO O AGENTE....\");\r\n\r\n                matricula = this.usuMatriculaLocal;\r\n                console.log( this.idOperacao + \"||matr =\" +  matricula + \" --> lista ->\" +  JSON.stringify(  vet ));\r\n                \r\n                tam = this.equipamentos.length;\r\n                for  (i=0; i<tam; i++ )     \r\n                {\r\n                    console.log( \"i[ \" + i + \"] =>> \" + JSON.stringify( this.equipamentos[i] ));\r\n                    auxObj    =  {   \r\n                          idOperacao : this.idOperacao, \r\n                          dataDevolucao : this.equipamentos[i].dataDevolucao,\r\n                          horaDevolucao : this.equipamentos[i].horaDevolucao,\r\n                          idEquipamento : this.equipamentos[i].idData,\r\n                          isAvariado    : null,\r\n                          tipoEquipamento : null,\r\n                          matriculaAgente : this.equipamentos[i].matriculaAgente,\r\n                          kmIni: this.equipamentos[i].kmIni,\r\n                          kmFim: this.equipamentos[i].kmFim,\r\n                    }\r\n                    //**** Ajuste/Conversão de valores/dados para os valores da tabela 'equipamentos' no BD. \r\n                    if ( this.equipamentos[i].tipo == \"Viatura\"  ) auxObj.tipoEquipamento = \"VIATURA\";\r\n                    if ( this.equipamentos[i].tipo == \"Rádio HT\" ) auxObj.tipoEquipamento = \"RADIO_HT\";\r\n                    if ( this.equipamentos[i].tipo == \"Colete\"   ) auxObj.tipoEquipamento = \"COLETE\";             \r\n                    vet[ i ] = auxObj;\r\n                    console.log( \"VET AGENTE atualiza ==>> \" + JSON.stringify( vet[ i ] ) );\r\n                }\r\n                console.log( JSON.stringify( vet ) );\r\n              }\r\n              this.cadastrarAgenteBD_LEGADO( vet );\r\n\r\n      }, // - FECHA cadastrarAgenteBD\r\n      cadastrarAgenteBD_LEGADO( vet )             \r\n      {\r\n        // this.modalIsVisible = true;\r\n        console.log(\"CADASTRAR !!!!!\");\r\n  \r\n        var operacaoStr = \"\";\r\n        // 1- CASO CADASTRANDO O AGENTE \r\n        if ( this.isAddOperacoesPage )  operacaoStr = \"cadastrar\";\r\n        else operacaoStr = \"atualizar\";\r\n\r\n        var sendData = {\r\n            dados: {\r\n                entidade: 'usoEquipamento',\r\n                operacao: operacaoStr,\r\n                objeto: { }\r\n            }\r\n        }  \r\n        \r\n\r\n        for( var i=0; i < vet.length ; i++   )  \r\n        {\r\n          var objAuxStr = JSON.stringify( vet[i] ).replace( /\\\\/g, \"\" );\r\n          // console.log( \"objAuxStr = \" + objAuxStr );\r\n          sendData.dados.objeto = JSON.parse( objAuxStr ); // vet[0]; // JSON.stringify( this.vet[0] ).replace( /\\\\/g, \"\" ).replace(\"id\", \"id_operacao\");\r\n          // this.validaNovaLinha( sendData.dados.objeto );\r\n          // console.log( \"objAuxStr = \" + objAuxStr );\r\n          \r\n          console.log( \"-- SEND ==||>> \" + JSON.stringify( sendData ).replace( /\\\\/g, \"\" ) );\r\n  \r\n          axios.post(  this.$SERVICES_ENDPOINT_URL , sendData )\r\n                .then( response => {\r\n                       console.log( \"Resposta API ==>>> \" +  JSON.stringify( response.data ).replace( /\\\\/g, \"\" ) );\r\n                       var checkSQLErrorStr = JSON.stringify( response.data ).replace( /\\\\/g, \"\" );\r\n                       console.log( \"Error? \" + checkSQLErrorStr.search(\"ERROR:\") );\r\n                       if ( checkSQLErrorStr.search(\"ERROR:\") != 0 ) \r\n                       {\r\n                          this.modalMessage = \"Erro de conexão: banco de dados.\";    \r\n                          this.modalIsVisible = true;\r\n                          console.log( \"AKIIIIII !!!!!!! \");\r\n                       }\r\n\r\n                       var data = response.data; // -->>> Isso chama o watcher !\r\n                      // console.log(\"Dados retornados = \" +  this.responseData.dados );\r\n                      /*console.log('-DATA ==>>> ' + JSON.stringify(  response.data )  );\r\n                      console.log( \"MSSG ==>>> \" + data.message + \"|| code= \" + data.code );*/\r\n  \r\n                      if ( data.code == 0 )   \r\n                      {\r\n                        this.hasSavedOnDatabase = true;\r\n                        this.sendStatusToParent();\r\n                       // console.log( \"ID = \" + data.data.id );\r\n                        // this.idValue = data.data.id;\r\n                      }\r\n                      this.modalMessage = data.message;\r\n                      this.modalIsVisible = true;\r\n                })\r\n                .catch(error => {\r\n                      this.error = error.message;\r\n                });\r\n          }  // END-FOR\r\n          // this.hasSavedOnDatabase = true;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  \r\n  \r\n  <style>\r\n  .modal-content      {\r\n      background-color: rgba(0, 0, 0, 0.5); /* Sets the background color with alpha */\r\n  }\r\n  .dados-operacao     {\r\n    width: 100%;\r\n    background-color: rgb(193, 193, 194);\r\n  }\r\n  \r\n  .table-container    {\r\n    margin: 10px;\r\n  }\r\n  \r\n  table.editable-table {\r\n    margin-top: 10px;\r\n    font-size: small;\r\n  }\r\n  \r\n  table.editable-table td {\r\n    vertical-align: middle;\r\n  }\r\n  \r\n  .editable-table .data-cell {\r\n    padding: 8px;\r\n    vertical-align: middle;\r\n  }\r\n  \r\n  .editable-table .custom-checkbox {\r\n    width: 50px;\r\n  }\r\n  \r\n  .remove-icon {\r\n    color: red;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .edit-icon {\r\n    color: rgb(4, 83, 158);\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .name-col {\r\n    width: 120px;\r\n  }\r\n  \r\n  .department-col {\r\n    width: 150px;\r\n  }\r\n  \r\n  .age-col {\r\n    width: 100px;\r\n  }\r\n  \r\n  .date-col {\r\n    width: 200px;\r\n  }\r\n  \r\n  .is-active-col {\r\n    width: 100px;\r\n  }\r\n  \r\n  .table-centralizer      {\r\n    display: flex;\r\n    justify-content: center; \r\n    align-items: center;\r\n  }\r\n  .btn-add                {\r\n      margin-right: 40%;\r\n      margin-left: 40%;\r\n      width: 200px;\r\n  } \r\n\r\n  .legenda-tabela {\r\n    color: rgb(5, 76, 104);\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    content: \"\";\r\n    padding-left: 5%;\r\n    text-align: center;\r\n  }\r\n  /*.btn-add-equip {\r\n    transform: translateX(30px);    \r\n     padding: 10px;\r\n     display: flex;\r\n     justify-content: center; \r\n     align-items: center;\r\n    }*/\r\n    .grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  grid-gap: 10px;\r\n}\r\n\r\n.column             {\r\n  text-align: center;\r\n}    \r\n\r\n.image-grid         {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n\r\n  /** Auto-height **/\r\n  height: auto;\r\n  display: inline-block; /* Ensures the div shrinks to fit its content */\r\n  overflow: hidden; /* Hides any content that overflows the div */\r\n}\r\n\r\n.image-column       {\r\n    flex: 1 1 200px; /* Adjust the width as per your needs */\r\n    text-align: center;\r\n    padding: 10px;\r\n    align-items: flex-start;\r\n    /** Auto-height **/\r\n    height: auto;\r\n    display: inline-block; /* Ensures the div shrinks to fit its content */\r\n    overflow: hidden; /* Hides any content that overflows the div */\r\n}\r\n\r\n.image-wrapper            {\r\n    width: 100%;\r\n    height: 20%;  /* Adjust the height as per your needs */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.image-wrapper img        {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    object-fit: contain;\r\n}\r\n\r\n.button-trash             {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.idDataLabel            {\r\n   color: rgb(0, 0, 0);\r\n   font-size: 10px;\r\n   font-weight: bold;\r\n}\r\n\r\n.align-bottom           {\r\n    margin-top: auto;\r\n    text-align: center;\r\n    padding-left: 40px;\r\n}\r\n\r\n.titulo-operacao        {\r\n    color: rgb(5, 76, 104);\r\n    font-size: 15px;\r\n    text-align: center;\r\n    font-weight: bold;\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}