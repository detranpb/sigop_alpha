{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*  import MyEditableTable from '@/components/MyEditableTable.vue';*/\nimport AppEquipamentosGrid from '@/components/AppEquipamentosGrid.vue';\nimport axios from 'axios';\nexport default {\n  computed: {\n    // CONSTANTE\n    IS_PAGE_EDITABLE() {\n      return this.$store.state.isPageEditable;\n    },\n    MATRICULAS_VALIDAS() {\n      return this.$store.state.matriculasValidas;\n    }\n  },\n  props: {\n    idValue: {\n      required: true // Optional, specify if the prop is required or not\n    },\n\n    tablesAgentes: {\n      type: Array\n    }\n  },\n  name: 'AppAccordion',\n  components: {\n    AppEquipamentosGrid\n  },\n  watch: {\n    idValue(newIdValue) {\n      this.idOperacao = newIdValue;\n    },\n    // !!!!!! !!!!!! !!!!!! !!!!!!TODO: IMPOR LIMITE !!!!!! !!!!!! !!!!!! !!!!!!\n    tablesAgentes(newTables) {\n      this.vetTablesData = newTables;\n      const matriculas = [...new Set(this.vetTablesData.map(item => item.matriculaAgente))];\n      this.usuMatricula = matriculas;\n      //console.log(\"-- usuMatriculas ===>>> \" + JSON.stringify( this.usuMatricula ) );\n\n      this.nAgentes = matriculas.length;\n      //console.log(\"-- AppAccordion || N° agentes ==>> \" + this.nAgentes );\n\n      for (var i = 0; i < this.nAgentes; i++) {\n        const newItem = {\n          title: 'Agente N° ' + (this.accordionItems.length + 1),\n          content: 'Registros de Entrada/Saída de Equipamentos'\n        };\n        if (this.accordionItems.length <= this.$TOTAL_AGENTES_POR_OPERACAO) this.accordionItems.push(newItem);\n      }\n    }\n  },\n  created() {\n    this.getListaAgentes();\n    if (this.$route.name == \"addOperacoes\") {\n      this.isAddOperacoesPage = true;\n    } else {\n      this.isAddOperacoesPage = false;\n    }\n    this.$store.commit('setIsPageEditable', this.isAddOperacoesPage);\n    // var str = this.$store.state.isPageEditable;\n    // console.log( \"AppEquipamentosGRID | isPageEditable ? \" + str );\n    // console.log( \"-AppAccordion || isAddOperacoes? \" + this.isAddOperacoesPage );\n    // console.log( \"accordion - \" + JSON.stringify( this.MATRICULAS_VALIDAS ) );\n  },\n\n  data() {\n    return {\n      /* vetTablesData :  [\r\n      {\r\n        'id_operacao': '1',\r\n        'dataDevolucao': '2023-04-25',\r\n        'horaDevolucao': '00:00:00',\r\n        'idEquipamento': '11',\r\n        'nomeEquipamento': 'Talonário',\r\n        'matriculaAgente': 123,\r\n        'isAvariado': '0'\r\n      },\r\n      {\r\n        'id_operacao': '1',\r\n        'dataDevolucao': '2023-04-25',\r\n        'horaDevolucao': '00:00:00',\r\n        'idEquipamento': '1',\r\n        'nomeEquipamento': 'Talonário X',\r\n        'matriculaAgente': 123,\r\n        'isAvariado': '0'\r\n      },\r\n      {\r\n        'id_operacao': '1',\r\n        'dataDevolucao': '2023-04-25',\r\n        'horaDevolucao': '00:00:00',\r\n        'idEquipamento': '1',\r\n        'nomeEquipamento': 'Talonário X',\r\n        'matriculaAgente': 2,\r\n        'isAvariado': '0'\r\n      }\r\n      ],*/\n      modalIsVisible: false,\n      modalMessage: \"Deseja confirmar a operação?\",\n      agentesLabelBD: ['teste'],\n      /* Vetor de strings matricula - nome */\n      agentesBD: [],\n      /* Vetor de objetos do tipo { nome, matricula }   */\n\n      agentesHasSavedBD: [],\n      /* Vetor de objetos, retornado pela consulta JSON da operação detalhada. \r\n      Cada elemento filho, contem os dados de uma linha da MyEditableTable. \r\n      vetTablesData[] é quebrado em arrays menores e agrupados de acordo com a matrícula do Agente.\r\n      Esses subarrays são passados para o componente MyEditableTable */\n      vetTablesData: [],\n      vetJSON: null,\n      idOperacao: null,\n      nAgentes: null,\n      /** ====== MODO DE USO - CONSULTA ====== */\n      // Variáveis compartilhadas/públicas com emit\n      equipamentosPorAgente: [],\n      // Cada ID, é o ID do agente\n      usuMatricula: [],\n      inputMatriculasAtivas: [],\n      // Guarda as matriculas atualmente digitadas\n\n      matrix: {},\n      isAddOperacoesPage: -1,\n      // Variáveis privadas\n      accordionItems: [],\n      tabitens: [],\n      // Array de JSONs\n      accordionState: {}\n    };\n  },\n  methods: {\n    /*getAgenteData( index ) {\r\n      const itemId = this.vetTablesData[ index ].matriculaAgente;\r\n      var x = this.vetTablesData.filter( item => item.matriculaAgente === itemId );\r\n      console.log( JSON.stringify( x ) );\r\n    },*/\n    updateUsuMatricula(index, value) {\n      this.usuMatricula[index] = value;\n    },\n    handleKeyDown(event) {\n      const value = event.target.value;\n      console.log(\"AppAcordion || matri = \" + value);\n      if (!this.isAddOperacoesPage) {\n        event.preventDefault();\n        this.modalMessage = \"Alteração de matrícula não permitida.\";\n        this.modalIsVisible = true;\n      }\n    },\n    handleCloseModal() {\n      console.log(\"Close ... \");\n      this.modalIsVisible = false;\n    },\n    handleAcceptModal() {\n      console.log(\"Accept ... \");\n      this.modalIsVisible = false;\n    },\n    handleRejectModal() {\n      console.log(\"Reject ... \");\n      this.modalIsVisible = false;\n    },\n    getTabelasPorAgentes(index) {\n      var tableMatricula = this.vetTablesData.filter(item => item.matriculaAgente === this.usuMatricula[index]);\n      // console.log( \"data tst = \" + JSON.stringify( tableMatricula ) );\n      return tableMatricula;\n    },\n    toggleAccordion(index) {\n      // Toggle the state of the accordion\n      this.$set(this.accordionState, index, !this.accordionState[index]);\n    },\n    addAccordionItem() {\n      /*if ( this.idOperacao == null )    {\r\n           this.modalIsVisible = true;\r\n           this.modalMessage   = \"Dados gerais da operação ainda não foram salvos.\";\r\n      } else  {\r\n          const newItem = {\r\n            title: 'Agente N° ' + ( this.accordionItems.length + 1 ),\r\n            content: 'Registros de Entrada/Saída de Equipamentos'\r\n          }\r\n          this.accordionItems.push( newItem )\r\n       }*/\n      const newItem = {\n        title: 'Agente N° ' + (this.accordionItems.length + 1),\n        content: 'Registros de Entrada/Saída de Equipamentos'\n      };\n      this.accordionItems.push(newItem);\n    },\n    removeAccordionItem(index) {\n      this.$delete(this.accordionItems, index);\n    },\n    /**\r\n     * updatedData : 1 String formatada em JSON, correspondendo a cada linha da Table\r\n     * \r\n     * SEMPRE QUE HOUVER ATUALIZAÇÃO NA TABELA, RECEBO AQUI OS DADOS \r\n     * */\n    handleDataUpdate(status, index, usuMatricula) {\n      console.log(\"STATUS >>> \" + status + \" i= \" + index + \"|| matri = \" + usuMatricula[index]);\n      this.agentesHasSavedBD[index] = status;\n    },\n    /* sendDataToParent()         \r\n    {\r\n        this.$emit( 'data-updated', this.equipamentosPorAgente );\r\n        //this.$emit('data-updated', { data: this.equipamentosPorAgente, usuMatricula: this.usuMatricula });\r\n    },*/\n    addToMatrix(UserKeyID, value) {\n      if (!Object.prototype.hasOwnProperty.call(this.matrix, UserKeyID)) {\n        this.matrix[UserKeyID] = [];\n      }\n      value = value.split('[').join('').split(']').join('');\n      // console.log( \"Val = \" + value );\n      this.matrix[UserKeyID].push(value);\n      // console.log(\"[ \" + UserKeyID + \"] == \" + this.matrix[ UserKeyID ] );\n    },\n\n    /*   validaAgente( matricula )\r\n     {\r\n       const matr = Number( matricula );\r\n       const isValid = this.MATRICULAS_VALIDAS.includes( matr );\r\n       // console.log(\"Valida agente!! \" + JSON.stringify( this.MATRICULAS_VALIDAS ) + \" || \" + isValid);\r\n       // isValid = this.MATRICULAS_VALIDAS.some(a => a === matricula );\r\n       // console.log( \"Teste = \" + isValid + \" || \" + matricula  );\r\n       if ( !isValid ) \r\n       {\r\n           this.modalIsVisible = true;\r\n           this.modalMessage = \"Matrícula/Agente inválida.\";\r\n           this.agenteResponsavel = \"\";\r\n       }  \r\n     },*/\n    validaAgente(indexMatricula) {\n      if (this.isAddOperacoesPage) {\n        const userInput = this.usuMatricula[indexMatricula];\n        const isValid = this.agentesLabelBD.some(a => a === userInput);\n        this.inputMatriculasAtivas[indexMatricula] = userInput;\n        console.log(\"Valida agente!! \" + userInput);\n        console.log(JSON.stringify(this.agentesHasSavedBD));\n        if (!isValid) {\n          this.modalIsVisible = true;\n          this.modalMessage = \"Matrícula/Agente inválida.\";\n        } /* else {  \r\n          const index = this.agentesLabelBD.indexOf( userInput );\r\n          if ( index !== -1 ) \r\n               this.agentesLabelBD.splice( index, 1 ); // Remove elemento.\r\n          }*/\n      }\n    },\n\n    getAgentesLabels() {\n      // console.log(  \"CHAMOU DATALIST!!! \" + this.agentesLabelBD[0] );\n      return this.agentesLabelBD.filter(item => !this.inputMatriculasAtivas.includes(item));\n    },\n    async getListaAgentes() {\n      var sendData = {\n        dados: {\n          entidade: 'agente',\n          operacao: 'consultar'\n        }\n      };\n      console.log(\"SEND >>> \" + JSON.stringify(sendData));\n      try {\n        var response = await axios.post(this.$SERVICES_ENDPOINT_URL, sendData);\n\n        // console.log( \"Resposta API = \" +  JSON.stringify( response.data , null, 2 ) );\n        var agentes = response.data; // -->>> Isso chama o watcher !\n        // console.log(\"Dados retornados = \" +  this.responseData.dados );\n        // console.log('-DATA == ' + JSON.stringify(  agentes ).replace( /\\\\/g, \"\" )  );\n\n        this.agentesBD = agentes.data;\n        for (var i = 0; i < this.agentesBD.length; i++) {\n          this.agentesLabelBD[i] = this.agentesBD[i].matricula + \" - \" + this.agentesBD[i].nome;\n          // console.log(  \"K =>> \" + this.agentesLabelBD[i] );\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["AppEquipamentosGrid","axios","computed","IS_PAGE_EDITABLE","$store","state","isPageEditable","MATRICULAS_VALIDAS","matriculasValidas","props","idValue","required","tablesAgentes","type","Array","name","components","watch","newIdValue","idOperacao","newTables","vetTablesData","matriculas","Set","map","item","matriculaAgente","usuMatricula","nAgentes","length","i","newItem","title","accordionItems","content","$TOTAL_AGENTES_POR_OPERACAO","push","created","getListaAgentes","$route","isAddOperacoesPage","commit","data","modalIsVisible","modalMessage","agentesLabelBD","agentesBD","agentesHasSavedBD","vetJSON","equipamentosPorAgente","inputMatriculasAtivas","matrix","tabitens","accordionState","methods","updateUsuMatricula","index","value","handleKeyDown","event","target","console","log","preventDefault","handleCloseModal","handleAcceptModal","handleRejectModal","getTabelasPorAgentes","tableMatricula","filter","toggleAccordion","$set","addAccordionItem","removeAccordionItem","$delete","handleDataUpdate","status","addToMatrix","UserKeyID","Object","prototype","hasOwnProperty","call","split","join","validaAgente","indexMatricula","userInput","isValid","some","a","JSON","stringify","getAgentesLabels","includes","sendData","dados","entidade","operacao","response","post","$SERVICES_ENDPOINT_URL","agentes","matricula","nome","error"],"sources":["src/components/AppAccordion.vue"],"sourcesContent":["<template>\r\n\r\n    <main>\r\n    <div>\r\n        <my-modal id=\"myModal\" title=\"Confirmação\" :message=\"modalMessage\" \r\n            :visible=\"modalIsVisible\"\r\n            @update:visible=\"modalIsVisible = $event\"\r\n            @on-close-modal=\"handleCloseModal()\"\r\n            @on-accept-modal=\"handleAcceptModal()\"\r\n            @on-reject-modal=\"handleRejectModal()\">\r\n        </my-modal>\r\n\r\n      <div class=\"id-operacao\"  v-if=\"idValue\">  ID de Operação: {{ idValue }} </div>\r\n\r\n      <div class=\"btn-add-agente\"> \r\n        <!-- Dados gerais -->\r\n         <b-button v-if=\"IS_PAGE_EDITABLE\" @click=\"addAccordionItem\" variant=\"success\">\r\n              <i class=\"fas fa-plus\"></i> Adicionar Novo Agente\r\n         </b-button>\r\n      </div>\r\n\r\n      <!-- key ==>> É como um id, serve para dar um reload no componenente. -->\r\n      <div v-for=\"(item, index) in accordionItems\" :key=\"index\">\r\n        <b-card>\r\n          <b-card-header header-tag=\"header\">\r\n            <b-button v-b-toggle=\"'accordion-' + index\" >\r\n                <i class=\"fa fa-sort\"></i> \r\n                <b-avatar variant=\"info\" rounded></b-avatar>\r\n                {{ item.title }} <!-- - {{ index }} -->\r\n            </b-button>\r\n            <button v-if=\"IS_PAGE_EDITABLE\" class=\"btn btn-link\" @click=\"removeAccordionItem( index )\">\r\n                <i class=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n          </b-card-header>\r\n\r\n          <b-collapse :id=\"'accordion-' + index\" accordion=\"my-accordion\" v-model=\"accordionState[index]\">\r\n            <b-card-body>\r\n              <div class=\"accordion-content\">{{ item.content }}</div>\r\n              <br>\r\n              <!-- <MyEditableTable @data-updated=\"handleDataUpdate\" /> -->\r\n              <div class=\"d-flex align-items-center\">\r\n              <label for=\"inline-form-input-name\" class=\"mr-2\">Matrícula/Agente:</label>\r\n              \r\n              <!-- :disabled=\"!IS_PAGE_EDITABLE\" :disabled=\"!isAddOperacoesPage\" -->\r\n\r\n              <b-form-input autocomplete=\"off\" \r\n                  @keydown=\"handleKeyDown\"\r\n                  v-model=\"usuMatricula[ index ]\"  \r\n                  id=\"inline-form-input-name\" \r\n                  style=\"width: 500px;\"\r\n                  list=\"matriculas-list\"\r\n                  @blur=\"validaAgente( index )\">\r\n                </b-form-input>\r\n              \r\n                <datalist v-if=\"isAddOperacoesPage\" id=\"matriculas-list\">\r\n                    <option v-for=\"a in getAgentesLabels()\" :key=\"a.nome\">{{ a }}</option>\r\n                </datalist>\r\n                \r\n            </div>\r\n            <AppEquipamentosGrid \r\n              :comp-table-itens=\"getTabelasPorAgentes( index )\" \r\n              @data-updated=\"data => handleDataUpdate( data, index, usuMatricula[ index ] )\" \r\n              :id-operacao=\"idOperacao\" \r\n              :usu-matricula=\"usuMatricula[ index ]\"/>\r\n            <!-- <MyEditableTable :comp-table-itens=\"getTabelasPorAgentes( index )\" @data-updated=\"data => handleDataUpdate( data, index, usuMatricula[ index ] )\" :id-operacao=\"idOperacao\" :usu-matricula=\"usuMatricula[ index ]\"/> -->\r\n            <!-- <MyEditableTable @data-updated=\"data => handleDataUpdate( data, index, usuMatricula[ index ] )\" :id-operacao=\"idOperacao\" :usu-matricula=\"usuMatricula[ index ]\" /> -->\r\n            \r\n            <!-- data - é a variável retornada pelo $emit do método sendDataToParent() \r\n                 index - é a variável local do pai.\r\n              -->\r\n\r\n            <!-- Dados gerais -->\r\n              <!-- <b-button class=\"btn-add\" variant=\"primary\"  @click=\"cadastrarBD( usuMatricula[ index ], index )\">\r\n                <i class=\"fa fa-database\"></i> Cadastrar Operação\r\n              </b-button>\r\n            -->\r\n              \r\n            </b-card-body>\r\n          </b-collapse>\r\n        </b-card>\r\n      </div>\r\n    </div>\r\n    </main>\r\n  </template>\r\n  \r\n  <script>\r\n/*  import MyEditableTable from '@/components/MyEditableTable.vue';*/\r\n  import AppEquipamentosGrid from '@/components/AppEquipamentosGrid.vue';\r\n  import axios from 'axios';\r\n  export default\r\n  {\r\n    computed: \r\n    {  // CONSTANTE\r\n       IS_PAGE_EDITABLE()   {\r\n          return this.$store.state.isPageEditable;\r\n       },\r\n       MATRICULAS_VALIDAS() {\r\n          return this.$store.state.matriculasValidas;\r\n      },\r\n    },\r\n    props: {\r\n      idValue: {\r\n        required: true, // Optional, specify if the prop is required or not\r\n      },\r\n      tablesAgentes:  {\r\n        type: Array,\r\n      }\r\n    },\r\n    name: 'AppAccordion',\r\n    components: {\r\n        AppEquipamentosGrid\r\n    },\r\n    watch: { \r\n      idValue( newIdValue )         {\r\n        this.idOperacao = newIdValue;\r\n      },\r\n\r\n      // !!!!!! !!!!!! !!!!!! !!!!!!TODO: IMPOR LIMITE !!!!!! !!!!!! !!!!!! !!!!!!\r\n      tablesAgentes( newTables )    \r\n      {\r\n          this.vetTablesData = newTables;\r\n          const matriculas = [...new Set( this.vetTablesData.map( item => item.matriculaAgente ) ) ];\r\n          this.usuMatricula = matriculas;\r\n          //console.log(\"-- usuMatriculas ===>>> \" + JSON.stringify( this.usuMatricula ) );\r\n\r\n          this.nAgentes = matriculas.length;\r\n          //console.log(\"-- AppAccordion || N° agentes ==>> \" + this.nAgentes );\r\n\r\n          \r\n          for ( var i=0; i<this.nAgentes; i++ )  {\r\n                const newItem = {\r\n                    title: 'Agente N° ' + ( this.accordionItems.length + 1 ),\r\n                    content: 'Registros de Entrada/Saída de Equipamentos'\r\n                }\r\n                if ( this.accordionItems.length <= this.$TOTAL_AGENTES_POR_OPERACAO )\r\n                     this.accordionItems.push( newItem );\r\n          }\r\n\r\n      }, \r\n    },\r\n    created()\r\n    {\r\n      this.getListaAgentes();\r\n\r\n      \r\n      if ( this.$route.name == \"addOperacoes\" ) {\r\n             this.isAddOperacoesPage = true;\r\n        } else  {\r\n            this.isAddOperacoesPage = false;\r\n        }\r\n        this.$store.commit( 'setIsPageEditable', this.isAddOperacoesPage );\r\n        // var str = this.$store.state.isPageEditable;\r\n        // console.log( \"AppEquipamentosGRID | isPageEditable ? \" + str );\r\n        // console.log( \"-AppAccordion || isAddOperacoes? \" + this.isAddOperacoesPage );\r\n        // console.log( \"accordion - \" + JSON.stringify( this.MATRICULAS_VALIDAS ) );\r\n    },\r\n    data()       \r\n    {\r\n      return  {\r\n            /* vetTablesData :  [\r\n            {\r\n              'id_operacao': '1',\r\n              'dataDevolucao': '2023-04-25',\r\n              'horaDevolucao': '00:00:00',\r\n              'idEquipamento': '11',\r\n              'nomeEquipamento': 'Talonário',\r\n              'matriculaAgente': 123,\r\n              'isAvariado': '0'\r\n            },\r\n            {\r\n              'id_operacao': '1',\r\n              'dataDevolucao': '2023-04-25',\r\n              'horaDevolucao': '00:00:00',\r\n              'idEquipamento': '1',\r\n              'nomeEquipamento': 'Talonário X',\r\n              'matriculaAgente': 123,\r\n              'isAvariado': '0'\r\n            },\r\n            {\r\n              'id_operacao': '1',\r\n              'dataDevolucao': '2023-04-25',\r\n              'horaDevolucao': '00:00:00',\r\n              'idEquipamento': '1',\r\n              'nomeEquipamento': 'Talonário X',\r\n              'matriculaAgente': 2,\r\n              'isAvariado': '0'\r\n            }\r\n          ],*/\r\n          modalIsVisible: false,\r\n          modalMessage: \"Deseja confirmar a operação?\",\r\n\r\n          agentesLabelBD: ['teste'],  /* Vetor de strings matricula - nome */\r\n          agentesBD: [],       /* Vetor de objetos do tipo { nome, matricula }   */\r\n\r\n          agentesHasSavedBD: [],\r\n\r\n          /* Vetor de objetos, retornado pela consulta JSON da operação detalhada. \r\n          Cada elemento filho, contem os dados de uma linha da MyEditableTable. \r\n          vetTablesData[] é quebrado em arrays menores e agrupados de acordo com a matrícula do Agente.\r\n          Esses subarrays são passados para o componente MyEditableTable */\r\n          vetTablesData : [],\r\n          vetJSON : null,\r\n          idOperacao : null,\r\n          nAgentes : null,\r\n    \r\n          /** ====== MODO DE USO - CONSULTA ====== */\r\n          // Variáveis compartilhadas/públicas com emit\r\n          equipamentosPorAgente : [], // Cada ID, é o ID do agente\r\n          usuMatricula : [],\r\n          \r\n          inputMatriculasAtivas : [], // Guarda as matriculas atualmente digitadas\r\n\r\n          matrix : {},\r\n          isAddOperacoesPage: -1,\r\n\r\n          // Variáveis privadas\r\n          accordionItems: [],\r\n          tabitens: [],   // Array de JSONs\r\n          accordionState: {}\r\n      }\r\n    },\r\n    \r\n    methods:  {\r\n      /*getAgenteData( index ) {\r\n        const itemId = this.vetTablesData[ index ].matriculaAgente;\r\n        var x = this.vetTablesData.filter( item => item.matriculaAgente === itemId );\r\n        console.log( JSON.stringify( x ) );\r\n      },*/ \r\n      updateUsuMatricula(index, value)      { \r\n          this.usuMatricula[index] = value;\r\n      },\r\n      handleKeyDown(event)                  {\r\n          const value = event.target.value;\r\n          console.log( \"AppAcordion || matri = \" + value );\r\n          if ( !this.isAddOperacoesPage )    {\r\n                event.preventDefault();\r\n\r\n                this.modalMessage   = \"Alteração de matrícula não permitida.\";\r\n                this.modalIsVisible = true;\r\n                \r\n          }\r\n      },\r\n      handleCloseModal()  {\r\n          console.log(\"Close ... \");\r\n          this.modalIsVisible = false;\r\n      },\r\n      handleAcceptModal() {\r\n          console.log(\"Accept ... \");\r\n          this.modalIsVisible = false;\r\n      },\r\n      handleRejectModal() {\r\n          console.log(\"Reject ... \");\r\n          this.modalIsVisible = false;\r\n      },\r\n      getTabelasPorAgentes( index )\r\n      { \r\n          var tableMatricula = this.vetTablesData.filter( item => item.matriculaAgente === this.usuMatricula[ index ] );\r\n          // console.log( \"data tst = \" + JSON.stringify( tableMatricula ) );\r\n          return tableMatricula;\r\n      },\r\n      toggleAccordion( index ) {\r\n        // Toggle the state of the accordion\r\n        this.$set( this.accordionState, index, !this.accordionState[index] );\r\n      },\r\n      addAccordionItem()    {\r\n        \r\n        /*if ( this.idOperacao == null )    {\r\n             this.modalIsVisible = true;\r\n             this.modalMessage   = \"Dados gerais da operação ainda não foram salvos.\";\r\n        } else  {\r\n            const newItem = {\r\n              title: 'Agente N° ' + ( this.accordionItems.length + 1 ),\r\n              content: 'Registros de Entrada/Saída de Equipamentos'\r\n            }\r\n            this.accordionItems.push( newItem )\r\n         }*/\r\n         const newItem = {\r\n              title: 'Agente N° ' + ( this.accordionItems.length + 1 ),\r\n              content: 'Registros de Entrada/Saída de Equipamentos'\r\n            }\r\n            this.accordionItems.push( newItem );\r\n      },\r\n\r\n      removeAccordionItem( index )  \r\n      {\r\n        this.$delete( this.accordionItems, index );\r\n      },\r\n\r\n      /**\r\n       * updatedData : 1 String formatada em JSON, correspondendo a cada linha da Table\r\n       * \r\n       * SEMPRE QUE HOUVER ATUALIZAÇÃO NA TABELA, RECEBO AQUI OS DADOS \r\n       * */  \r\n      handleDataUpdate( status, index, usuMatricula ) \r\n      { \r\n          console.log( \"STATUS >>> \" + status + \" i= \" + index + \"|| matri = \" + usuMatricula[ index ] );\r\n          this.agentesHasSavedBD[ index ] = status;\r\n      },\r\n\r\n      /* sendDataToParent()         \r\n      {\r\n          this.$emit( 'data-updated', this.equipamentosPorAgente );\r\n          //this.$emit('data-updated', { data: this.equipamentosPorAgente, usuMatricula: this.usuMatricula });\r\n      },*/\r\n      addToMatrix( UserKeyID , value ) \r\n      {\r\n        if ( !Object.prototype.hasOwnProperty.call( this.matrix, UserKeyID )  ) \r\n        {\r\n          this.matrix[ UserKeyID ] = [];\r\n        } \r\n        value = value.split('[').join('').split(']').join('');\r\n        // console.log( \"Val = \" + value );\r\n        this.matrix[ UserKeyID ].push( value );\r\n        // console.log(\"[ \" + UserKeyID + \"] == \" + this.matrix[ UserKeyID ] );\r\n      },\r\n   /*   validaAgente( matricula )\r\n    {\r\n      const matr = Number( matricula );\r\n      const isValid = this.MATRICULAS_VALIDAS.includes( matr );\r\n      // console.log(\"Valida agente!! \" + JSON.stringify( this.MATRICULAS_VALIDAS ) + \" || \" + isValid);\r\n      // isValid = this.MATRICULAS_VALIDAS.some(a => a === matricula );\r\n      // console.log( \"Teste = \" + isValid + \" || \" + matricula  );\r\n      if ( !isValid ) \r\n      {\r\n          this.modalIsVisible = true;\r\n          this.modalMessage = \"Matrícula/Agente inválida.\";\r\n          this.agenteResponsavel = \"\";\r\n      }  \r\n    },*/\r\n    validaAgente( indexMatricula )\r\n    {\r\n\r\n      if ( this.isAddOperacoesPage )    {\r\n          const userInput = this.usuMatricula[ indexMatricula ];         \r\n          const isValid = this.agentesLabelBD.some(a => a === userInput );\r\n          this.inputMatriculasAtivas[ indexMatricula ] = userInput;\r\n\r\n          console.log(\"Valida agente!! \" + userInput );\r\n          console.log( JSON.stringify( this.agentesHasSavedBD ) );\r\n          if ( !isValid )   {\r\n              this.modalIsVisible = true;\r\n              this.modalMessage = \"Matrícula/Agente inválida.\";\r\n          }  /* else {  \r\n            const index = this.agentesLabelBD.indexOf( userInput );\r\n            if ( index !== -1 ) \r\n                  this.agentesLabelBD.splice( index, 1 ); // Remove elemento.\r\n          }*/\r\n        }\r\n    },\r\n\r\n    getAgentesLabels()  {\r\n      // console.log(  \"CHAMOU DATALIST!!! \" + this.agentesLabelBD[0] );\r\n        return this.agentesLabelBD.filter( item => !this.inputMatriculasAtivas.includes( item ) );\r\n    },\r\n\r\n    async getListaAgentes() \r\n    {\r\n      var sendData =  {\r\n          dados: {\r\n              entidade: 'agente',\r\n              operacao: 'consultar'\r\n          }\r\n      };\r\n      console.log( \"SEND >>> \" + JSON.stringify( sendData ));\r\n\r\n\r\n      try {\r\n          var response = await axios.post( this.$SERVICES_ENDPOINT_URL , sendData );\r\n\r\n          // console.log( \"Resposta API = \" +  JSON.stringify( response.data , null, 2 ) );\r\n          var agentes = response.data; // -->>> Isso chama o watcher !\r\n          // console.log(\"Dados retornados = \" +  this.responseData.dados );\r\n          // console.log('-DATA == ' + JSON.stringify(  agentes ).replace( /\\\\/g, \"\" )  );\r\n          \r\n          this.agentesBD = agentes.data;\r\n          for( var i=0; i<this.agentesBD.length; i++)  \r\n          {\r\n               this.agentesLabelBD[i] = this.agentesBD[ i ].matricula + \" - \" + this.agentesBD[ i ].nome;               \r\n               // console.log(  \"K =>> \" + this.agentesLabelBD[i] );\r\n          }\r\n      }  catch (error) {\r\n        console.error(error);\r\n      }  \r\n      }\r\n    }\r\n  }\r\n  </script>\r\n\r\n  <style>\r\n  .btn-add-agente {\r\n      /*margin-left: -5%;*/\r\n      padding: 10px;\r\n      display: flex;\r\n      justify-content: center; \r\n      align-items: center;\r\n  }\r\n  .accordion-content    {\r\n      color: rgb(5, 76, 104);\r\n      font-size: 15px;\r\n      font-weight: bold;\r\n  }\r\n  .matricula-input  {\r\n    width: 20px;\r\n  }\r\n  .id-operacao  {\r\n    margin: 20px;\r\n    color: rgb(5, 76, 104);\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}