{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FormOperacoes from '@/pages/FormOperacoes';\nimport MyLoadingOverlay from '@/components/MyLoadingOverlay.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    FormOperacoes,\n    MyLoadingOverlay\n  },\n  computed: {\n    // CONSTANTE\n    IS_PAGE_EDITABLE() {\n      return this.$store.state.isPageEditable;\n    },\n    LISTA_AGENTES() {\n      return this.$store.state.listaAgentes;\n    },\n    LISTA_LABELS_AGENTES() {\n      return this.$store.state.listaAgentes;\n    }\n  },\n  watch: {\n    /* Essa variável é modificada pelo check-box 'Habilitar Edição' isEditable */\n    isEditable(newValue) {\n      this.isEditable = newValue;\n      this.$store.commit('setIsPageEditable', this.isEditable);\n      console.log(\"Call set form...\");\n      this.setFormEditable();\n      // var str = this.$store.state.isPageEditable;\n      // console.log( \"HISTORICO | edit? \" + str );\n    }\n  },\n\n  created() {\n    if (this.$route.name == \"addOperacoes\") {\n      this.isAddOperacoesPage = true;\n    } else {\n      this.isAddOperacoesPage = false;\n    }\n    console.log(\"-FormOperacoes || isAddOperacoes? \" + this.isAddOperacoesPage);\n    this.$store.commit('setIsPageEditable', this.isAddOperacoesPage);\n    var str = this.$store.state.isPageEditable;\n    console.log(\"AppEquipamentosGRID | isPageEditable ? \" + str);\n    this.$store.commit('setIsPageEditable', false);\n    // console.log( \"teste >>> \" + JSON.stringify( this.LISTA_LABELS_AGENTES ) );\n  },\n\n  name: 'AddOperacoes',\n  tabIndex: 1,\n  data() {\n    return {\n      isLoading: false,\n      modalIsVisible: false,\n      modalMessage: \"Deseja confirmar a operação?\",\n      isAddOperacoesPage: -1,\n      // dataOp: \"2023-01-01\",\n      activeTab: 0,\n      // Tab ativa por padrão\n      idTab: 1,\n      // ID da Tab que deve ser ativada\n      tabs: [],\n      tabCounter: 0,\n      responseOperacoesData: Object,\n      isEditable: false,\n      isTableOperacoesVisible: false,\n      isDetalharOperacoesOn: false,\n      filtroSelecionado: '',\n      filtrosValues: {\n        dataOp: \"2023-01-01\",\n        id: \"1\",\n        matriculaResponsavel: null\n      },\n      /* {\"id\":\"1\",\"nomeOperacao\":\"Paulo XXXXXnome\",\"data\":\"2023-01-01\",\"matriculaResponsavel\":\"0\"}*/\n      tableData: [{\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }, {\n        id: 1,\n        nomeOperacao: \" \",\n        data: \" \",\n        matriculaResponsavel: 0\n      }],\n      tableFields: [{\n        key: \"id\",\n        label: \"ID\"\n      }, {\n        key: \"nomeOperacao\",\n        label: \"Nome\"\n      }, {\n        key: \"data\",\n        label: \"Data\"\n      }, {\n        key: \"matriculaResponsavel\",\n        label: \"Matricula\"\n      }],\n      selectedRowId: null\n    };\n  },\n  methods: {\n    handleRowClicked(item, index, event) {\n      this.selectedRowId = item.id;\n      console.log(JSON.stringify(item) + \" -- \" + index + \" -- \" + event);\n      this.buscaDetalhesOperacaoByID(item.id);\n    },\n    selecionaFiltro(option) {\n      this.filtroSelecionado = option;\n      console.log(\"FILTRO = \" + this.filtroSelecionado + '|| tipo = ' + typeof this.filtroSelecionado);\n    },\n    /* Chama no filho,FormOperacoes, o metodo setFormEditable()*/\n    setFormEditable() {\n      this.$refs.setFormEditableRef.toggleFormDisabled(); // Call the child method\n    },\n\n    handleCloseModal() {\n      this.modalIsVisible = false;\n      console.log(\"Close ... \");\n    },\n    handleAcceptModal() {\n      // console.log(\"Accept ... \");\n      this.modalIsVisible = false;\n    },\n    handleRejectModal() {\n      // console.log(\"Reject ... \");\n      this.modalIsVisible = false;\n    },\n    closeTab(x) {\n      for (let i = 0; i < this.tabs.length; i++) {\n        if (this.tabs[i] === x) this.tabs.splice(i, 1);\n      }\n      this.tabCounter--;\n    },\n    newTab() {\n      this.tabs.push(this.tabCounter++);\n    },\n    activateCurrentTab() {\n      this.$refs.tabs.activateTab(this.activeTab); // Ativa a aba (tab) atual\n    },\n\n    activateTabById() {\n      // Obtém o índice da aba (tab) correspondente à variável idTab\n      const tabIndex = this.$refs.tabs.tabs.findIndex(tab => tab.id === `tab-${this.idTab}`);\n      // Ativa a aba (tab) correspondente\n      this.$refs.tabs.activateTab(tabIndex);\n    },\n    buscarOperacoes() {\n      console.log(\"-buscarOperacoes ==>> \" + JSON.stringify(this.filtrosValues) + \", \" + this.filtroSelecionado);\n      var sendData = {\n        dados: {\n          entidade: 'operacao',\n          operacao: 'consultar',\n          objeto: {\n            filtro: true\n          }\n        }\n      };\n      if (this.filtroSelecionado == 'data') {\n        sendData.dados.objeto.data = '' + this.filtrosValues.dataOp;\n        console.log(\"-- SEND data ==||>> \" + JSON.stringify(sendData).replace(/\\\\/g, \"\"));\n      } else if (this.filtroSelecionado == 'id') {\n        sendData.dados.objeto.id = '' + this.filtrosValues.id;\n        console.log(\"-- SEND id ==||>> \" + JSON.stringify(sendData).replace(/\\\\/g, \"\"));\n      }\n      axios.post(this.$SERVICES_ENDPOINT_URL, sendData).then(response => {\n        var dados = response.data; // -->>> Isso chama o watcher !\n        console.log(\"Resposta API = \" + JSON.stringify(response.data) + \" || \" + JSON.stringify(dados.data).replace(/\\\\/g, \"\"));\n        if (dados.data == null) {\n          this.modalIsVisible = true;\n          this.modalMessage = \"Nenhuma operação encontrada.\";\n        }\n        if (dados.data.length > 0) this.isTableOperacoesVisible = true;\n        var numOperacoes = dados.data.length;\n        for (var i = 0; i < numOperacoes; i++) {\n          this.tableData[i].id = dados.data[i].id;\n          this.tableData[i].nomeOperacao = dados.data[i].nomeOperacao;\n          this.tableData[i].data = dados.data[i].data;\n          this.tableData[i].matriculaResponsavel = dados.data[i].matriculaResponsavel;\n        }\n        this.tableData.splice(numOperacoes, this.tableData.length - numOperacoes);\n      }).catch(error => {\n        this.error = error.message;\n      });\n    },\n    buscaDetalhesOperacaoByID(idOperacao) {\n      // var dataOperacao = \"2023-01-02\";\n      this.isLoading = true;\n\n      // this.changeGlobalVariable();\n      var sendData = {\n        dados: {\n          entidade: 'operacaoDetalhada',\n          operacao: 'consultar',\n          objeto: {\n            id: ''\n          }\n        }\n      };\n      sendData.dados.objeto.id = idOperacao;\n      console.log(\"-- SEND id ==||>> \" + JSON.stringify(sendData).replace(/\\\\/g, \"\"));\n      this.isDetalharOperacoesOn = true;\n      axios.post(this.$SERVICES_ENDPOINT_URL, sendData).then(response => {\n        // console.log( \"Resposta API = \" +  JSON.stringify( response.data , null, 2 ) );\n        // this.responseData = response.data; // \n        console.log(\"Retorno type = \" + typeof response.data);\n        this.responseOperacoesData = response.data; // -->>> Isso chama o watcher !\n        // console.log(\"Response API || Dados Busca ==> \" +  JSON.stringify(  this.responseOperacoesData ) );\n\n        var code = this.responseOperacoesData.code;\n        var msg = this.responseOperacoesData.message;\n        this.isLoading = false;\n        if (code != 0) {\n          this.modalIsVisible = true;\n          this.modalMessage = msg;\n        }\n        console.log(\"BUSCA || Response API ==> \" + JSON.stringify(this.responseOperacoesData.data));\n      }).catch(error => {\n        this.error = error.message;\n      });\n    } // END-FOR\n  }\n};","map":{"version":3,"names":["FormOperacoes","MyLoadingOverlay","axios","components","computed","IS_PAGE_EDITABLE","$store","state","isPageEditable","LISTA_AGENTES","listaAgentes","LISTA_LABELS_AGENTES","watch","isEditable","newValue","commit","console","log","setFormEditable","created","$route","name","isAddOperacoesPage","str","tabIndex","data","isLoading","modalIsVisible","modalMessage","activeTab","idTab","tabs","tabCounter","responseOperacoesData","Object","isTableOperacoesVisible","isDetalharOperacoesOn","filtroSelecionado","filtrosValues","dataOp","id","matriculaResponsavel","tableData","nomeOperacao","tableFields","key","label","selectedRowId","methods","handleRowClicked","item","index","event","JSON","stringify","buscaDetalhesOperacaoByID","selecionaFiltro","option","$refs","setFormEditableRef","toggleFormDisabled","handleCloseModal","handleAcceptModal","handleRejectModal","closeTab","x","i","length","splice","newTab","push","activateCurrentTab","activateTab","activateTabById","findIndex","tab","buscarOperacoes","sendData","dados","entidade","operacao","objeto","filtro","replace","post","$SERVICES_ENDPOINT_URL","then","response","numOperacoes","catch","error","message","idOperacao","code","msg"],"sources":["src/pages/HistoricoOperacoes.vue"],"sourcesContent":["<template>\r\n      <!-- O main sempre vai ser 100% do viewheitgh - (cabeçalho+rodapé)-->\r\n  <main>\r\n  <b-card>\r\n      <h4 style=\"margin: 15px;\" class=\"card-title text-center titulo-paginas\"> Histórico de Equipamentos </h4> \r\n      <my-modal \r\n          id=\"myModal\" \r\n          title=\"Confirmation\" \r\n          :message=\"modalMessage\" \r\n          :visible=\"modalIsVisible\" \r\n          @update:visible=\"modalIsVisible = $event\" \r\n          @on-close-modal=\"handleCloseModal()\"\r\n          @on-accept-modal=\"handleAcceptModal()\"\r\n          @on-reject-modal=\"handleRejectModal()\"/>\r\n\r\n      <!-- Your parent component content here -->\r\n      <my-loading-overlay :is-loading=\"isLoading\">\r\n      </my-loading-overlay>\r\n\r\n      <div class=\"container-historico\">\r\n            <div id=\"FILTROS_ID\" style=\"margin-top: 10px;\">\r\n              <b-dropdown text=\"Filtros de Consulta\" class=\"m-md-2\">\r\n                  <b-dropdown-item @click=\"selecionaFiltro('data')\">Data da Operação</b-dropdown-item>\r\n                  <b-dropdown-item @click=\"selecionaFiltro('id')\">ID da Operação</b-dropdown-item>\r\n                  <!-- <b-dropdown-item disabled=\"true\">Agente Responsável</b-dropdown-item>\r\n                  <b-dropdown-item disabled=\"true\">Município</b-dropdown-item>\r\n                  <b-dropdown-item disabled=\"true\">Bairro</b-dropdown-item>-->\r\n              </b-dropdown>\r\n            </div>\r\n            <div id=\"ID_OPERACAO_ID\"   class=\"elementos-busca\" v-if=\"( filtroSelecionado=='id' )\">\r\n                <label class=\"label\"><b> ID da Operação: </b></label>\r\n                <b-form-input type=\"number\" style=\"width:100px;\" autocomplete=\"off\" v-model=\"filtrosValues.id\" id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0 custom-input\"></b-form-input>\r\n            </div>\r\n\r\n            <div id=\"DATA_OPERACAO_ID\" class=\"elementos-busca\" v-if=\"( filtroSelecionado=='data' )\">\r\n              <div>\r\n                <label class=\"label\" for=\"example-datepicker\"><b> Selecione a Data: </b></label>\r\n                <b-form-datepicker style=\"width:300px;\"   id=\"example-datepicker\" v-model=\"filtrosValues.dataOp\" class=\"mb-2\"></b-form-datepicker>\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"BTN_BUSCAR_OPERACOES_ID\" class=\"elementos-busca\" v-if=\"( ( filtroSelecionado == 'data' ) || ( filtroSelecionado == 'id' ) )\">           \r\n              <b-button style=\"margin-top: 18px;\"  class=\"float-right\" @click=\"buscarOperacoes()\">\r\n                      <i class=\"fa fa-search\"></i> Buscar Operações\r\n              </b-button>\r\n            </div>\r\n      </div>\r\n      <div v-if=\"isTableOperacoesVisible\" class=\"tabela-container\" id=\"LISTA_OPERACOES_ID\">\r\n  <div class=\"content\">\r\n    <label class=\"label\"><b>Operações Disponíveis</b></label>\r\n    <b-table :items=\"tableData\" :fields=\"tableFields\" striped hover selectable @row-clicked=\"handleRowClicked\"></b-table>\r\n  </div>\r\n</div>\r\n\r\n      <div id=\"OPERACOES_DETALHES_ID\" v-if=\"isDetalharOperacoesOn\">\r\n      <b-tabs card>\r\n        <!-- Render Tabs, supply a unique `key` to each tab -->\r\n\r\n        <b-tabs card v-model=\"activeTab\">\r\n            <b-tab title=\"Operação 1\"> \r\n              <b-form-checkbox v-model=\"isEditable\" switch> Habilitar Edição </b-form-checkbox>\r\n              <!-- key: serve para atualizar o status de um componente, ou criar uma nova instância -->\r\n                <FormOperacoes \r\n                  :dadosOperacoes=\"this.responseOperacoesData.data\" \r\n                  :key=\"filtrosValues.dataOp\" \r\n                  ref=\"setFormEditableRef\"/> <!-- REF MÉTODO USADO para ser chaado no filho-->\r\n\r\n                  <!-- {{ this.responseOperacoesData.data }} -->\r\n            </b-tab>\r\n\r\n            \r\n            <!--\r\n              <b-tab title=\"Operação 2\"> <FormOperacoes /> </b-tab>\r\n              <b-tab title=\"Operação 3\"> <FormOperacoes /> </b-tab>\r\n              -->\r\n        </b-tabs>\r\n\r\n        <template #empty>\r\n          <div class=\"text-center text-muted\">\r\n            Sem operações abertas.<br>\r\n            Abra uma nova aba de operações com o botão acima.\r\n          </div>\r\n        </template>\r\n      </b-tabs>\r\n    </div>\r\n    </b-card>\r\n  \r\n\r\n    <!-- Control buttons\r\n    <div class=\"text-center\">\r\n      <b-button-group class=\"mt-2\">\r\n        <b-button @click=\"activeTab--\">Anterior</b-button>\r\n        <b-button @click=\"activeTab++\">Próxima</b-button>\r\n      </b-button-group>\r\n    </div>\r\n    -->\r\n \r\n  </main>\r\n</template>\r\n\r\n\r\n<script>\r\n  import FormOperacoes  from '@/pages/FormOperacoes';\r\n  import MyLoadingOverlay from '@/components/MyLoadingOverlay.vue';\r\n  import axios from 'axios';\r\n\r\n  export default \r\n  { \r\n    components: {\r\n      FormOperacoes,\r\n      MyLoadingOverlay\r\n    },\r\n    computed: \r\n    {   // CONSTANTE\r\n        IS_PAGE_EDITABLE()      {\r\n           return this.$store.state.isPageEditable;\r\n        },\r\n        LISTA_AGENTES()         {\r\n           return this.$store.state.listaAgentes;\r\n        },\r\n        LISTA_LABELS_AGENTES()  {\r\n          return this.$store.state.listaAgentes;\r\n        },\r\n    },\r\n    watch: \r\n    {\r\n        /* Essa variável é modificada pelo check-box 'Habilitar Edição' isEditable */\r\n        isEditable( newValue )  {\r\n          this.isEditable = newValue;\r\n          this.$store.commit('setIsPageEditable', this.isEditable );\r\n\r\n          console.log(\"Call set form...\");\r\n          this.setFormEditable();\r\n          // var str = this.$store.state.isPageEditable;\r\n          // console.log( \"HISTORICO | edit? \" + str );\r\n        }\r\n    },\r\n    created()   \r\n    { \r\n        if ( this.$route.name == \"addOperacoes\" ) {\r\n             this.isAddOperacoesPage = true;\r\n        } else  {\r\n            this.isAddOperacoesPage = false;\r\n        }\r\n        console.log( \"-FormOperacoes || isAddOperacoes? \" + this.isAddOperacoesPage );\r\n        this.$store.commit( 'setIsPageEditable', this.isAddOperacoesPage );\r\n        var str = this.$store.state.isPageEditable;\r\n        console.log( \"AppEquipamentosGRID | isPageEditable ? \" + str );\r\n\r\n        this.$store.commit('setIsPageEditable', false );\r\n        // console.log( \"teste >>> \" + JSON.stringify( this.LISTA_LABELS_AGENTES ) );\r\n    },\r\n    name:'AddOperacoes',\r\n    tabIndex: 1,\r\n    data()  {  \r\n      return  {\r\n          isLoading : false,\r\n          modalIsVisible : false,\r\n          modalMessage: \"Deseja confirmar a operação?\",\r\n          isAddOperacoesPage: -1,\r\n          // dataOp: \"2023-01-01\",\r\n          activeTab: 0, // Tab ativa por padrão\r\n          idTab: 1, // ID da Tab que deve ser ativada\r\n          tabs: [],\r\n          tabCounter: 0,\r\n          responseOperacoesData: Object,\r\n          isEditable: false,\r\n          isTableOperacoesVisible: false,\r\n          isDetalharOperacoesOn: false,\r\n\r\n          filtroSelecionado: '',\r\n          filtrosValues : {\r\n            dataOp : \"2023-01-01\",\r\n            id: \"1\",\r\n            matriculaResponsavel: null,\r\n          },\r\n          /* {\"id\":\"1\",\"nomeOperacao\":\"Paulo XXXXXnome\",\"data\":\"2023-01-01\",\"matriculaResponsavel\":\"0\"}*/\r\n          tableData: [\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n             { id: 1, nomeOperacao: \" \", data: \" \", matriculaResponsavel:0 },\r\n          ],\r\n          tableFields: [\r\n            { key: \"id\", label: \"ID\" },\r\n            { key: \"nomeOperacao\", label: \"Nome\" },\r\n            { key: \"data\", label: \"Data\" },\r\n            { key: \"matriculaResponsavel\", label: \"Matricula\" }\r\n          ],\r\n          selectedRowId: null,\r\n      }\r\n    }, \r\n    methods:          \r\n    {\r\n      handleRowClicked( item, index, event ) \r\n      {\r\n          this.selectedRowId = item.id;\r\n          console.log( JSON.stringify( item ) + \" -- \" + index + \" -- \" + event );\r\n          this.buscaDetalhesOperacaoByID( item.id );\r\n      },\r\n      selecionaFiltro( option )       {\r\n          this.filtroSelecionado = option;\r\n          console.log( \"FILTRO = \" + this.filtroSelecionado + '|| tipo = ' + typeof this.filtroSelecionado);\r\n      },\r\n      /* Chama no filho,FormOperacoes, o metodo setFormEditable()*/\r\n      setFormEditable()   {\r\n          this.$refs.setFormEditableRef.toggleFormDisabled(); // Call the child method\r\n      },\r\n      handleCloseModal()  {\r\n        this.modalIsVisible = false;  \r\n        console.log(\"Close ... \");\r\n      },\r\n      handleAcceptModal() {\r\n          // console.log(\"Accept ... \");\r\n          this.modalIsVisible = false;\r\n      },\r\n      handleRejectModal() {\r\n          // console.log(\"Reject ... \");\r\n          this.modalIsVisible = false;\r\n      },\r\n      closeTab(x) {\r\n        for ( let i = 0; i < this.tabs.length; i++ ) \r\n        {\r\n          if ( this.tabs[i] === x )\r\n               this.tabs.splice( i, 1 )\r\n        }\r\n        this.tabCounter--;\r\n      },\r\n      newTab()              \r\n      {\r\n          this.tabs.push(this.tabCounter++)\r\n      },\r\n      activateCurrentTab()  \r\n      {\r\n          this.$refs.tabs.activateTab( this.activeTab ); // Ativa a aba (tab) atual\r\n      },\r\n      activateTabById()     {\r\n          // Obtém o índice da aba (tab) correspondente à variável idTab\r\n          const tabIndex = this.$refs.tabs.tabs.findIndex(\r\n            (tab) => tab.id === `tab-${this.idTab}`\r\n          );\r\n          // Ativa a aba (tab) correspondente\r\n          this.$refs.tabs.activateTab( tabIndex );\r\n      },\r\n      buscarOperacoes()  \r\n      {\r\n        console.log( \"-buscarOperacoes ==>> \" + JSON.stringify( this.filtrosValues ) + \", \" + this.filtroSelecionado );\r\n        var sendData    =    {\r\n          dados: {\r\n              entidade: 'operacao',\r\n              operacao: 'consultar',\r\n              objeto: { \r\n                filtro: true\r\n              }\r\n          }\r\n        };\r\n        if ( this.filtroSelecionado == 'data' )   {\r\n             sendData.dados.objeto.data = '' + this.filtrosValues.dataOp;\r\n             console.log( \"-- SEND data ==||>> \" + JSON.stringify( sendData ).replace( /\\\\/g, \"\" ) );\r\n        } else if ( this.filtroSelecionado == 'id' ) {\r\n             sendData.dados.objeto.id   = '' + this.filtrosValues.id;\r\n             console.log( \"-- SEND id ==||>> \" + JSON.stringify( sendData ).replace( /\\\\/g, \"\" ) );\r\n        }\r\n\r\n      axios.post( this.$SERVICES_ENDPOINT_URL , sendData )\r\n            .then( response =>    {\r\n                   var dados = response.data; // -->>> Isso chama o watcher !\r\n                   console.log( \"Resposta API = \" + JSON.stringify( response.data ) + \" || \" + JSON.stringify( dados.data ).replace( /\\\\/g, \"\" ) );\r\n                   \r\n                   if ( dados.data == null ) {\r\n                        this.modalIsVisible = true;\r\n                        this.modalMessage = \"Nenhuma operação encontrada.\";\r\n                   }\r\n\r\n                   if ( dados.data.length > 0 )\r\n                        this.isTableOperacoesVisible = true;\r\n\r\n                   var numOperacoes = dados.data.length;\r\n                   for ( var i=0; i<numOperacoes; i++ )    {\r\n                        this.tableData[i].id = dados.data[i].id; \r\n                        this.tableData[i].nomeOperacao = dados.data[i].nomeOperacao;\r\n                        this.tableData[i].data = dados.data[i].data;\r\n                        this.tableData[i].matriculaResponsavel = dados.data[i].matriculaResponsavel;\r\n                   }\r\n                   this.tableData.splice(numOperacoes, this.tableData.length - numOperacoes);\r\n            })\r\n            .catch(error => {\r\n                  this.error = error.message;\r\n            });\r\n      },\r\n\r\n      buscaDetalhesOperacaoByID( idOperacao )   {\r\n        \r\n        // var dataOperacao = \"2023-01-02\";\r\n        this.isLoading = true;\r\n        \r\n        // this.changeGlobalVariable();\r\n        var sendData    =    {\r\n          dados: {\r\n              entidade: 'operacaoDetalhada',\r\n              operacao: 'consultar',\r\n              objeto: { \r\n                id: ''\r\n              }\r\n          }\r\n        }; \r\n        sendData.dados.objeto.id = idOperacao;\r\n        console.log( \"-- SEND id ==||>> \" + JSON.stringify( sendData ).replace( /\\\\/g, \"\" ) );\r\n        this.isDetalharOperacoesOn = true;\r\n\r\n        axios.post( this.$SERVICES_ENDPOINT_URL , sendData )\r\n              .then( response => {\r\n                    // console.log( \"Resposta API = \" +  JSON.stringify( response.data , null, 2 ) );\r\n                    // this.responseData = response.data; // \r\n                    console.log( \"Retorno type = \" + typeof response.data );\r\n                    this.responseOperacoesData = response.data; // -->>> Isso chama o watcher !\r\n                    // console.log(\"Response API || Dados Busca ==> \" +  JSON.stringify(  this.responseOperacoesData ) );\r\n\r\n                    var code = this.responseOperacoesData.code;\r\n                    var msg  = this.responseOperacoesData.message;\r\n                    \r\n                    this.isLoading = false;\r\n\r\n                    if ( code != 0 )   \r\n                    {\r\n                         this.modalIsVisible = true;\r\n                         this.modalMessage = msg;\r\n                    } \r\n                    console.log(\"BUSCA || Response API ==> \" +  JSON.stringify(  this.responseOperacoesData.data ) );\r\n              })\r\n              .catch(error => {\r\n                    this.error = error.message;\r\n              });\r\n        } // END-FOR\r\n        \r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n.container-historico      {\r\n  background-color: var(--color-background);\r\n  margin: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.container-historico > div {\r\n  margin-right: 1px;\r\n}\r\n.container-historico > div:last-child {\r\n  margin-right: 0;\r\n}\r\n.elementos-busca {\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n}\r\n.label           {\r\n  font-size: 15px;\r\n}\r\n\r\n.tabela-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .content {\r\n    width: 50%;\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}